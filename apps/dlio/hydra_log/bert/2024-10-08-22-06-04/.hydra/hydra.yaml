hydra:
  run:
    dir: ./hydra_log/${workload.model}/${now:%Y-%m-%d}-${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: dlio_benchmark
    header: =========================== ${hydra.help.app_name} ===========================
    footer: "Please submit questions/bugs to \n  https://github.com/argonne-lcf/dlio_benchmark/issues\n\
      \n          Copyright (c) 2021 UChicago Argonne, LLC"
    template: "\n${hydra.help.header}\n\nDLIO - an IO benchmark for deep learning\
      \ applications. \n\nRunning the benchmark: dlio_benchmark workload=unet3d\n\n\
      One can select the workload configuration using \"workload={WORKLOAD}\". \n\
      The corresponding YAML file is ./configs/workload/{WORKLOAD}.yaml folder. \n\
      Available choise for $APP_CONFIG_GROUPS\nOne can override everything in the\
      \ command line, for example:\ndlio_benchmark workload.framework=tensorflow\n\
      \nOne can also create a custom YAML file for a specific workload. \nAn example\
      \ of a YAML file is as follows. \n\n-------\n$CONFIG\n-------\nA complete list\
      \ of config options in the YAML file can be found: \nhttps://argonne-lcf.github.io/dlio_benchmark/config.html\n\
      \nBy default all the output files will be saved in hydra.run.dir. \nThis can\
      \ be changed in ./configs/config.yaml.\n\n${hydra.help.footer}\n--"
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    root:
      level: ERROR
    disable_existing_loggers: true
  job_logging:
    version: 1
    root:
      level: ERROR
    disable_existing_loggers: true
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=RUN
    task:
    - workload=bert_v100
    - ++workload.output.folder=/usr/workspace/haridev/iopp/apps/dlio/output/bert_v100-2_16_8
    - ++workload.dataset.data_folder=/p/lustre3/haridev/bert_v100/data
    - ++workload.checkpoint.checkpoint_folder=/p/lustre3/haridev/bert_v100/checkpoint
    - ++workload.workflow.generate_data=False
    - ++workload.workflow.train=True
    - ++workload.reader.read_threads=6
  job:
    name: main
    chdir: null
    override_dirname: ++workload.checkpoint.checkpoint_folder=/p/lustre3/haridev/bert_v100/checkpoint,++workload.dataset.data_folder=/p/lustre3/haridev/bert_v100/data,++workload.output.folder=/usr/workspace/haridev/iopp/apps/dlio/output/bert_v100-2_16_8,++workload.reader.read_threads=6,++workload.workflow.generate_data=False,++workload.workflow.train=True,workload=bert_v100
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /usr/WS2/haridev/iopp/apps/dlio
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: dlio_benchmark.configs
      schema: pkg
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /usr/WS2/haridev/iopp/apps/dlio/hydra_log/bert/2024-10-08-22-06-04
    choices:
      workload: bert_v100
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: disabled
      hydra/hydra_logging: disabled
      hydra/hydra_help: default
      hydra/help: dlio_benchmark_help.yaml
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false

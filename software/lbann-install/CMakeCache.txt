# This is the CMakeCache file.
# For build in directory: /usr/workspace/haridev/iopp/software/lbann-install
# It was generated by CMake: /usr/tce/packages/cmake/cmake-3.23.1/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//ASM_NASM compiler
CMAKE_ASM_NASM_COMPILER:FILEPATH=/usr/bin/nasm

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:UNINITIALIZED=Release

//No help, variable specified on the command line.
CMAKE_CUDA_ARCHITECTURES:UNINITIALIZED=70

//CUDA compiler
CMAKE_CUDA_COMPILER:FILEPATH=/usr/tce/packages/cuda/cuda-11.8.0/bin/nvcc

//No help, variable specified on the command line.
CMAKE_CUDA_HOST_COMPILER:UNINITIALIZED=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//No help, variable specified on the command line.
CMAKE_CUDA_STANDARD:UNINITIALIZED=17

//No help, variable specified on the command line.
CMAKE_CXX_COMPILER:UNINITIALIZED=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//No help, variable specified on the command line.
CMAKE_CXX_FLAGS:UNINITIALIZED=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//No help, variable specified on the command line.
CMAKE_CXX_STANDARD:UNINITIALIZED=17

//No help, variable specified on the command line.
CMAKE_C_COMPILER:UNINITIALIZED=/usr/tce/packages/gcc/gcc-11.2.1/bin/gcc

//No help, variable specified on the command line.
CMAKE_C_FLAGS:UNINITIALIZED=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//No help, variable specified on the command line.
CMAKE_EXE_LINKER_FLAGS:UNINITIALIZED=-fuse-ld=gold

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//No help, variable specified on the command line.
CMAKE_Fortran_COMPILER:UNINITIALIZED=/usr/tce/packages/gcc/gcc-11.2.1/bin/gfortran

//HIP compiler
CMAKE_HIP_COMPILER:FILEPATH=NOTFOUND

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps

//Program used to build from build.ninja files.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/workspace/haridev/iopp/venvs/opence-1.9.1-cuda-11.8/bin/ninja

//No help, variable specified on the command line.
CMAKE_POSITION_INDEPENDENT_CODE:UNINITIALIZED=ON

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=LBANN_SuperBuild

//No help, variable specified on the command line.
CMAKE_SHARED_LINKER_FLAGS:UNINITIALIZED=-fuse-ld=gold

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Git command line client
GIT_EXECUTABLE:FILEPATH=/usr/tcetmp/bin/git

//Path to a program.
GNU_MAKE_PROGRAM:FILEPATH=/usr/tcetmp/bin/make

//The build RPATHs to add to Aluminum.
LBANN_SB_Aluminum_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for Aluminum
LBANN_SB_Aluminum_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for Aluminum?
LBANN_SB_Aluminum_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_Aluminum_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for Aluminum
LBANN_SB_Aluminum_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone Aluminum?
LBANN_SB_Aluminum_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for Aluminum.
LBANN_SB_Aluminum_CMAKE_GENERATOR:STRING=Ninja

//The CUDA architectures for Aluminum.
LBANN_SB_Aluminum_CUDA_ARCHITECTURES:STRING=70

//The CUDA compiler to use for Aluminum.
LBANN_SB_Aluminum_CUDA_COMPILER:STRING=/usr/tce/packages/cuda/cuda-11.8.0/bin/nvcc

//The CUDA compiler flags to use for Aluminum.
LBANN_SB_Aluminum_CUDA_FLAGS:STRING=

//The CUDA compiler flags to use for Aluminum in RELEASE mode.
LBANN_SB_Aluminum_CUDA_FLAGS_RELEASE:STRING=

//The CUDA HOST compiler to use for Aluminum.
LBANN_SB_Aluminum_CUDA_HOST_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CUDA standard to use for Aluminum.
LBANN_SB_Aluminum_CUDA_STANDARD:STRING=17

//The CXX compiler to use for Aluminum.
LBANN_SB_Aluminum_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for Aluminum.
LBANN_SB_Aluminum_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for Aluminum in RELEASE mode.
LBANN_SB_Aluminum_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for Aluminum.
LBANN_SB_Aluminum_CXX_STANDARD:STRING=17

//The exe linker flags for Aluminum.
LBANN_SB_Aluminum_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for Aluminum in RELEASE mode.
LBANN_SB_Aluminum_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HIP architectures for Aluminum.
LBANN_SB_Aluminum_HIP_ARCHITECTURES:STRING=

//The HIP compiler to use for Aluminum.
LBANN_SB_Aluminum_HIP_COMPILER:STRING=NOTFOUND

//The HIP compiler flags to use for Aluminum.
LBANN_SB_Aluminum_HIP_FLAGS:STRING=

//The HIP compiler flags to use for Aluminum in RELEASE mode.
LBANN_SB_Aluminum_HIP_FLAGS_RELEASE:STRING=

//The HIP standard to use for Aluminum.
LBANN_SB_Aluminum_HIP_STANDARD:STRING=

//The HTTPS URL CMake installation prefix for Aluminum.
LBANN_SB_Aluminum_HTTPS_URL:STRING=https://github.com/llnl/Aluminum.git

//Remove toolchain-specific paths from install RPATH for Aluminum
LBANN_SB_Aluminum_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to Aluminum.
LBANN_SB_Aluminum_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for Aluminum
LBANN_SB_Aluminum_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for Aluminum?
LBANN_SB_Aluminum_IPO:BOOL=OFF

//Force PIC for Aluminum?
LBANN_SB_Aluminum_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_Aluminum_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/aluminum

//The shared linker flags for Aluminum.
LBANN_SB_Aluminum_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for Aluminum in RELEASE mode.
LBANN_SB_Aluminum_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to Aluminum
LBANN_SB_Aluminum_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to Aluminum
LBANN_SB_Aluminum_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to Aluminum
LBANN_SB_Aluminum_SKIP_RPATH:BOOL=OFF

//The source directory for Aluminum.
LBANN_SB_Aluminum_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/aluminum/src

//The SSH URL CMake installation prefix for Aluminum.
LBANN_SB_Aluminum_SSH_URL:STRING=git@github.com:llnl/Aluminum.git

//The static linker flags for Aluminum.
LBANN_SB_Aluminum_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for Aluminum in RELEASE mode.
LBANN_SB_Aluminum_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for Aluminum.
LBANN_SB_Aluminum_TAG:STRING=master

//The URL to use to clone Aluminum.
LBANN_SB_Aluminum_URL:STRING=https://github.com/llnl/Aluminum.git

//Optionally download and build AWS_OFI_RCCL?
LBANN_SB_BUILD_AWS_OFI_RCCL:BOOL=OFF

//Optionally download and build Aluminum?
LBANN_SB_BUILD_Aluminum:BOOL=ON

//Optionally download and build CNPY?
LBANN_SB_BUILD_CNPY:BOOL=ON

//Optionally download and build Caliper?
LBANN_SB_BUILD_Caliper:BOOL=OFF

//Optionally download and build Catch2?
LBANN_SB_BUILD_Catch2:BOOL=ON

//Optionally download and build Clara?
LBANN_SB_BUILD_Clara:BOOL=ON

//Optionally download and build Conduit?
LBANN_SB_BUILD_Conduit:BOOL=ON

//Optionally download and build DiHydrogen?
LBANN_SB_BUILD_DiHydrogen:BOOL=ON

//Optionally download and build HDF5?
LBANN_SB_BUILD_HDF5:BOOL=ON

//Optionally download and build Hydrogen?
LBANN_SB_BUILD_Hydrogen:BOOL=ON

//Optionally download and build JPEG-TURBO?
LBANN_SB_BUILD_JPEG-TURBO:BOOL=ON

//Optionally download and build LBANN?
LBANN_SB_BUILD_LBANN:BOOL=ON

//Optionally download and build NCCL?
LBANN_SB_BUILD_NCCL:BOOL=ON

//Optionally download and build OpenBLAS?
LBANN_SB_BUILD_OpenBLAS:BOOL=OFF

//Optionally download and build OpenCV?
LBANN_SB_BUILD_OpenCV:BOOL=ON

//Optionally download and build RCCL?
LBANN_SB_BUILD_RCCL:BOOL=OFF

//Optionally download and build adiak?
LBANN_SB_BUILD_adiak:BOOL=OFF

//Optionally download and build cereal?
LBANN_SB_BUILD_cereal:BOOL=ON

//Optionally download and build hiptt?
LBANN_SB_BUILD_hiptt:BOOL=OFF

//Optionally download and build hwloc?
LBANN_SB_BUILD_hwloc:BOOL=OFF

//Optionally download and build protobuf?
LBANN_SB_BUILD_protobuf:BOOL=ON

//Optionally download and build spdlog?
LBANN_SB_BUILD_spdlog:BOOL=ON

//Optionally download and build zstr?
LBANN_SB_BUILD_zstr:BOOL=ON

//Use SSH protocol instead of HTTPS for github.
LBANN_SB_CLONE_VIA_SSH:BOOL=OFF

//The build RPATHs to add to CNPY.
LBANN_SB_CNPY_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for CNPY
LBANN_SB_CNPY_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for CNPY?
LBANN_SB_CNPY_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_CNPY_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for CNPY
LBANN_SB_CNPY_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone CNPY?
LBANN_SB_CNPY_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for CNPY.
LBANN_SB_CNPY_CMAKE_GENERATOR:STRING=Ninja

//The CXX compiler to use for CNPY.
LBANN_SB_CNPY_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for CNPY.
LBANN_SB_CNPY_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for CNPY in RELEASE mode.
LBANN_SB_CNPY_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for CNPY.
LBANN_SB_CNPY_CXX_STANDARD:STRING=17

//The C compiler to use for CNPY.
LBANN_SB_CNPY_C_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/gcc

//The C compiler flags to use for CNPY.
LBANN_SB_CNPY_C_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The C compiler flags to use for CNPY in RELEASE mode.
LBANN_SB_CNPY_C_FLAGS_RELEASE:STRING=

//The C standard to use for CNPY.
LBANN_SB_CNPY_C_STANDARD:STRING=

//The exe linker flags for CNPY.
LBANN_SB_CNPY_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for CNPY in RELEASE mode.
LBANN_SB_CNPY_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HTTPS URL CMake installation prefix for CNPY.
LBANN_SB_CNPY_HTTPS_URL:STRING=https://github.com/rogersce/cnpy.git

//Remove toolchain-specific paths from install RPATH for CNPY
LBANN_SB_CNPY_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to CNPY.
LBANN_SB_CNPY_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for CNPY
LBANN_SB_CNPY_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for CNPY?
LBANN_SB_CNPY_IPO:BOOL=OFF

//Force PIC for CNPY?
LBANN_SB_CNPY_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_CNPY_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/cnpy

//The shared linker flags for CNPY.
LBANN_SB_CNPY_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for CNPY in RELEASE mode.
LBANN_SB_CNPY_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to CNPY
LBANN_SB_CNPY_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to CNPY
LBANN_SB_CNPY_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to CNPY
LBANN_SB_CNPY_SKIP_RPATH:BOOL=OFF

//The source directory for CNPY.
LBANN_SB_CNPY_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/cnpy/src

//The SSH URL CMake installation prefix for CNPY.
LBANN_SB_CNPY_SSH_URL:STRING=git@github.com:rogersce/cnpy.git

//The static linker flags for CNPY.
LBANN_SB_CNPY_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for CNPY in RELEASE mode.
LBANN_SB_CNPY_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for CNPY.
LBANN_SB_CNPY_TAG:STRING=4e8810b1a8637695171ed346ce68f6984e585ef4

//The URL to use to clone CNPY.
LBANN_SB_CNPY_URL:STRING=https://github.com/rogersce/cnpy.git

//The build RPATHs to add to Catch2.
LBANN_SB_Catch2_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for Catch2
LBANN_SB_Catch2_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for Catch2?
LBANN_SB_Catch2_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_Catch2_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for Catch2
LBANN_SB_Catch2_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone Catch2?
LBANN_SB_Catch2_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for Catch2.
LBANN_SB_Catch2_CMAKE_GENERATOR:STRING=Ninja

//The CXX compiler to use for Catch2.
LBANN_SB_Catch2_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for Catch2.
LBANN_SB_Catch2_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for Catch2 in RELEASE mode.
LBANN_SB_Catch2_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for Catch2.
LBANN_SB_Catch2_CXX_STANDARD:STRING=17

//The exe linker flags for Catch2.
LBANN_SB_Catch2_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for Catch2 in RELEASE mode.
LBANN_SB_Catch2_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HTTPS URL CMake installation prefix for Catch2.
LBANN_SB_Catch2_HTTPS_URL:STRING=https://github.com/catchorg/catch2.git

//Remove toolchain-specific paths from install RPATH for Catch2
LBANN_SB_Catch2_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to Catch2.
LBANN_SB_Catch2_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for Catch2
LBANN_SB_Catch2_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for Catch2?
LBANN_SB_Catch2_IPO:BOOL=OFF

//Force PIC for Catch2?
LBANN_SB_Catch2_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_Catch2_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/catch2

//The shared linker flags for Catch2.
LBANN_SB_Catch2_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for Catch2 in RELEASE mode.
LBANN_SB_Catch2_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to Catch2
LBANN_SB_Catch2_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to Catch2
LBANN_SB_Catch2_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to Catch2
LBANN_SB_Catch2_SKIP_RPATH:BOOL=OFF

//The source directory for Catch2.
LBANN_SB_Catch2_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/catch2/src

//The SSH URL CMake installation prefix for Catch2.
LBANN_SB_Catch2_SSH_URL:STRING=git@github.com:catchorg/catch2.git

//The static linker flags for Catch2.
LBANN_SB_Catch2_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for Catch2 in RELEASE mode.
LBANN_SB_Catch2_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for Catch2.
LBANN_SB_Catch2_TAG:STRING=devel

//The URL to use to clone Catch2.
LBANN_SB_Catch2_URL:STRING=https://github.com/catchorg/catch2.git

//The build RPATHs to add to Clara.
LBANN_SB_Clara_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for Clara
LBANN_SB_Clara_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for Clara?
LBANN_SB_Clara_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_Clara_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for Clara
LBANN_SB_Clara_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone Clara?
LBANN_SB_Clara_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for Clara.
LBANN_SB_Clara_CMAKE_GENERATOR:STRING=Ninja

//The CXX compiler to use for Clara.
LBANN_SB_Clara_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for Clara.
LBANN_SB_Clara_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for Clara in RELEASE mode.
LBANN_SB_Clara_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for Clara.
LBANN_SB_Clara_CXX_STANDARD:STRING=17

//The exe linker flags for Clara.
LBANN_SB_Clara_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for Clara in RELEASE mode.
LBANN_SB_Clara_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HTTPS URL CMake installation prefix for Clara.
LBANN_SB_Clara_HTTPS_URL:STRING=https://github.com/catchorg/clara.git

//Remove toolchain-specific paths from install RPATH for Clara
LBANN_SB_Clara_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to Clara.
LBANN_SB_Clara_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for Clara
LBANN_SB_Clara_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for Clara?
LBANN_SB_Clara_IPO:BOOL=OFF

//Force PIC for Clara?
LBANN_SB_Clara_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_Clara_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/clara

//The shared linker flags for Clara.
LBANN_SB_Clara_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for Clara in RELEASE mode.
LBANN_SB_Clara_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to Clara
LBANN_SB_Clara_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to Clara
LBANN_SB_Clara_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to Clara
LBANN_SB_Clara_SKIP_RPATH:BOOL=OFF

//The source directory for Clara.
LBANN_SB_Clara_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/clara/src

//The SSH URL CMake installation prefix for Clara.
LBANN_SB_Clara_SSH_URL:STRING=git@github.com:catchorg/clara.git

//The static linker flags for Clara.
LBANN_SB_Clara_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for Clara in RELEASE mode.
LBANN_SB_Clara_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for Clara.
LBANN_SB_Clara_TAG:STRING=v1.1.5

//The URL to use to clone Clara.
LBANN_SB_Clara_URL:STRING=https://github.com/catchorg/clara.git

//The build RPATHs to add to Conduit.
LBANN_SB_Conduit_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for Conduit
LBANN_SB_Conduit_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for Conduit?
LBANN_SB_Conduit_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_Conduit_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for Conduit
LBANN_SB_Conduit_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone Conduit?
LBANN_SB_Conduit_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for Conduit.
LBANN_SB_Conduit_CMAKE_GENERATOR:STRING=Ninja

//The CXX compiler to use for Conduit.
LBANN_SB_Conduit_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for Conduit.
LBANN_SB_Conduit_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for Conduit in RELEASE mode.
LBANN_SB_Conduit_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for Conduit.
LBANN_SB_Conduit_CXX_STANDARD:STRING=17

//The C compiler to use for Conduit.
LBANN_SB_Conduit_C_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/gcc

//The C compiler flags to use for Conduit.
LBANN_SB_Conduit_C_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The C compiler flags to use for Conduit in RELEASE mode.
LBANN_SB_Conduit_C_FLAGS_RELEASE:STRING=

//The C standard to use for Conduit.
LBANN_SB_Conduit_C_STANDARD:STRING=

//The exe linker flags for Conduit.
LBANN_SB_Conduit_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for Conduit in RELEASE mode.
LBANN_SB_Conduit_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HTTPS URL CMake installation prefix for Conduit.
LBANN_SB_Conduit_HTTPS_URL:STRING=https://github.com/llnl/conduit.git

//Remove toolchain-specific paths from install RPATH for Conduit
LBANN_SB_Conduit_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to Conduit.
LBANN_SB_Conduit_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for Conduit
LBANN_SB_Conduit_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for Conduit?
LBANN_SB_Conduit_IPO:BOOL=OFF

//Force PIC for Conduit?
LBANN_SB_Conduit_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_Conduit_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/conduit

//The shared linker flags for Conduit.
LBANN_SB_Conduit_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for Conduit in RELEASE mode.
LBANN_SB_Conduit_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to Conduit
LBANN_SB_Conduit_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to Conduit
LBANN_SB_Conduit_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to Conduit
LBANN_SB_Conduit_SKIP_RPATH:BOOL=OFF

//The source directory for Conduit.
LBANN_SB_Conduit_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/conduit/src

//The SSH URL CMake installation prefix for Conduit.
LBANN_SB_Conduit_SSH_URL:STRING=git@github.com:llnl/conduit.git

//The static linker flags for Conduit.
LBANN_SB_Conduit_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for Conduit in RELEASE mode.
LBANN_SB_Conduit_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for Conduit.
LBANN_SB_Conduit_TAG:STRING=develop

//The URL to use to clone Conduit.
LBANN_SB_Conduit_URL:STRING=https://github.com/llnl/conduit.git

//Set Tom's preferred default options for CUDA builds.
LBANN_SB_DEFAULT_CUDA_OPTS:BOOL=ON

//Package prefix selection strategy. [COMMON, PKG, PKG_LC].
LBANN_SB_DEFAULT_INSTALL_PATH_STRATEGY:STRING=PKG_LC

//Set Tom's preferred default options for ROCm builds.
LBANN_SB_DEFAULT_ROCM_OPTS:BOOL=OFF

//The build RPATHs to add to DiHydrogen.
LBANN_SB_DiHydrogen_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for DiHydrogen
LBANN_SB_DiHydrogen_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for DiHydrogen?
LBANN_SB_DiHydrogen_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_DiHydrogen_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for DiHydrogen
LBANN_SB_DiHydrogen_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone DiHydrogen?
LBANN_SB_DiHydrogen_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for DiHydrogen.
LBANN_SB_DiHydrogen_CMAKE_GENERATOR:STRING=Ninja

//The CUDA architectures for DiHydrogen.
LBANN_SB_DiHydrogen_CUDA_ARCHITECTURES:STRING=70

//The CUDA compiler to use for DiHydrogen.
LBANN_SB_DiHydrogen_CUDA_COMPILER:STRING=/usr/tce/packages/cuda/cuda-11.8.0/bin/nvcc

//The CUDA compiler flags to use for DiHydrogen.
LBANN_SB_DiHydrogen_CUDA_FLAGS:STRING=

//The CUDA compiler flags to use for DiHydrogen in RELEASE mode.
LBANN_SB_DiHydrogen_CUDA_FLAGS_RELEASE:STRING=

//The CUDA HOST compiler to use for DiHydrogen.
LBANN_SB_DiHydrogen_CUDA_HOST_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CUDA standard to use for DiHydrogen.
LBANN_SB_DiHydrogen_CUDA_STANDARD:STRING=17

//The CXX compiler to use for DiHydrogen.
LBANN_SB_DiHydrogen_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for DiHydrogen.
LBANN_SB_DiHydrogen_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for DiHydrogen in RELEASE mode.
LBANN_SB_DiHydrogen_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for DiHydrogen.
LBANN_SB_DiHydrogen_CXX_STANDARD:STRING=17

//The exe linker flags for DiHydrogen.
LBANN_SB_DiHydrogen_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for DiHydrogen in RELEASE mode.
LBANN_SB_DiHydrogen_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HIP architectures for DiHydrogen.
LBANN_SB_DiHydrogen_HIP_ARCHITECTURES:STRING=

//The HIP compiler to use for DiHydrogen.
LBANN_SB_DiHydrogen_HIP_COMPILER:STRING=NOTFOUND

//The HIP compiler flags to use for DiHydrogen.
LBANN_SB_DiHydrogen_HIP_FLAGS:STRING=

//The HIP compiler flags to use for DiHydrogen in RELEASE mode.
LBANN_SB_DiHydrogen_HIP_FLAGS_RELEASE:STRING=

//The HIP standard to use for DiHydrogen.
LBANN_SB_DiHydrogen_HIP_STANDARD:STRING=

//The HTTPS URL CMake installation prefix for DiHydrogen.
LBANN_SB_DiHydrogen_HTTPS_URL:STRING=https://github.com/LLNL/DiHydrogen.git

//Remove toolchain-specific paths from install RPATH for DiHydrogen
LBANN_SB_DiHydrogen_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to DiHydrogen.
LBANN_SB_DiHydrogen_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for DiHydrogen
LBANN_SB_DiHydrogen_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for DiHydrogen?
LBANN_SB_DiHydrogen_IPO:BOOL=OFF

//Force PIC for DiHydrogen?
LBANN_SB_DiHydrogen_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_DiHydrogen_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/dihydrogen

//The shared linker flags for DiHydrogen.
LBANN_SB_DiHydrogen_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for DiHydrogen in RELEASE mode.
LBANN_SB_DiHydrogen_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to DiHydrogen
LBANN_SB_DiHydrogen_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to DiHydrogen
LBANN_SB_DiHydrogen_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to DiHydrogen
LBANN_SB_DiHydrogen_SKIP_RPATH:BOOL=OFF

//The source directory for DiHydrogen.
LBANN_SB_DiHydrogen_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/dihydrogen/src

//The SSH URL CMake installation prefix for DiHydrogen.
LBANN_SB_DiHydrogen_SSH_URL:STRING=git@github.com:LLNL/DiHydrogen.git

//The static linker flags for DiHydrogen.
LBANN_SB_DiHydrogen_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for DiHydrogen in RELEASE mode.
LBANN_SB_DiHydrogen_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for DiHydrogen.
LBANN_SB_DiHydrogen_TAG:STRING=develop

//The URL to use to clone DiHydrogen.
LBANN_SB_DiHydrogen_URL:STRING=https://github.com/LLNL/DiHydrogen.git

//No help, variable specified on the command line.
LBANN_SB_FWD_Aluminum_ALUMINUM_ENABLE_BENCHMARKS:UNINITIALIZED=OFF

//Aluminum: Enable Caliper support in Aluminum
LBANN_SB_FWD_Aluminum_ALUMINUM_ENABLE_CALIPER:BOOL=OFF

//Aluminum: Enable the base CUDA support in Aluminum
LBANN_SB_FWD_Aluminum_ALUMINUM_ENABLE_CUDA:BOOL=ON

//Aluminum: Enable the host-transfer backend in Aluminum
LBANN_SB_FWD_Aluminum_ALUMINUM_ENABLE_HOST_TRANSFER:BOOL=ON

//No help, variable specified on the command line.
LBANN_SB_FWD_Aluminum_ALUMINUM_ENABLE_NCCL:UNINITIALIZED=ON

//No help, variable specified on the command line.
LBANN_SB_FWD_Aluminum_ALUMINUM_ENABLE_NVPROF:UNINITIALIZED=ON

//No help, variable specified on the command line.
LBANN_SB_FWD_Aluminum_ALUMINUM_ENABLE_TESTS:UNINITIALIZED=OFF

//No help, variable specified on the command line.
LBANN_SB_FWD_Aluminum_ALUMINUM_ENABLE_THREAD_MULTIPLE:UNINITIALIZED=OFF

//Enable the CNPY static linkage.
LBANN_SB_FWD_CNPY_ENABLE_STATIC:BOOL=ON

//Build CONDUIT with fortran support
LBANN_SB_FWD_Conduit_ENABLE_FORTRAN:BOOL=OFF

//Enable MPI support in CONDUIT.
LBANN_SB_FWD_Conduit_ENABLE_MPI:BOOL=ON

//Enable CONDUIT Python module support.
LBANN_SB_FWD_Conduit_ENABLE_PYTHON:BOOL=OFF

//Build CONDUIT unit tests.
LBANN_SB_FWD_Conduit_ENABLE_TESTS:BOOL=OFF

//No help, variable specified on the command line.
LBANN_SB_FWD_DiHydrogen_CMAKE_CXX_FLAGS:UNINITIALIZED=

//No help, variable specified on the command line.
LBANN_SB_FWD_DiHydrogen_CMAKE_CXX_FLAGS_RELEASE:UNINITIALIZED=-Og -DNDEBUG -g3

//No help, variable specified on the command line.
LBANN_SB_FWD_DiHydrogen_CUDNN_DIR:UNINITIALIZED=/usr/workspace/brain/cudnn/cudnn-8.9.7/cuda_11_ppc64le

//DiHydrogen: Enable developer warnings/features in H2
LBANN_SB_FWD_DiHydrogen_H2_DEVELOPER_BUILD:BOOL=ON

//DiHydrogen: Enable CUDA support in DiHydrogen
LBANN_SB_FWD_DiHydrogen_H2_ENABLE_CUDA:BOOL=ON

//DiHydrogen: Enable legacy DistConv library in DiHydrogen
LBANN_SB_FWD_DiHydrogen_H2_ENABLE_DISTCONV_LEGACY:BOOL=ON

//Build HDF5 tests.
LBANN_SB_FWD_HDF5_BUILD_TESTING:BOOL=OFF

//Default API version for HDF5
LBANN_SB_FWD_HDF5_DEFAULT_API_VERSION:BOOL=v18

LBANN_SB_FWD_HDF5_HDF5_BUILD_CPP_LIB:BOOL=OFF

//Build HDF5 examples.
LBANN_SB_FWD_HDF5_HDF5_BUILD_EXAMPLES:BOOL=OFF

//Build HDF5 with fortran support
LBANN_SB_FWD_HDF5_HDF5_BUILD_FORTRAN:BOOL=OFF

//Build HDF5 with parallel (MPI) support.
LBANN_SB_FWD_HDF5_HDF5_ENABLE_PARALLEL:BOOL=ON

//Build HDF5 with ZLIB support
LBANN_SB_FWD_HDF5_HDF5_ENABLE_Z_LIB_SUPPORT:BOOL=ON

//See HDF5 docs.
LBANN_SB_FWD_HDF5_HDF5_GENERATE_HEADERS:BOOL=ON

//Use 1.10 API by default
LBANN_SB_FWD_HDF5_HDF5_USE_110_API_DEFAULT:BOOL=OFF

//Use 1.12 API by default
LBANN_SB_FWD_HDF5_HDF5_USE_112_API_DEFAULT:BOOL=OFF

//Use 1.6 API by default
LBANN_SB_FWD_HDF5_HDF5_USE_16_API_DEFAULT:BOOL=OFF

//Use 1.8 API by default
LBANN_SB_FWD_HDF5_HDF5_USE_18_API_DEFAULT:BOOL=ON

//No help, variable specified on the command line.
LBANN_SB_FWD_Hydrogen_CMAKE_CXX_FLAGS_RELEASE:UNINITIALIZED=-O3 -DNDEBUG -g3

//Hydrogen: Enable Aluminum-based communication in Hydrogen
LBANN_SB_FWD_Hydrogen_Hydrogen_ENABLE_ALUMINUM:BOOL=ON

//Hydrogen: Enable (hip)CUB memory allocators in Hydrogen
LBANN_SB_FWD_Hydrogen_Hydrogen_ENABLE_CUB:BOOL=ON

//Hydrogen: Enable CUDA support in Hydrogen
LBANN_SB_FWD_Hydrogen_Hydrogen_ENABLE_CUDA:BOOL=ON

//No help, variable specified on the command line.
LBANN_SB_FWD_Hydrogen_Hydrogen_ENABLE_HALF:UNINITIALIZED=OFF

//Hydrogen: Use OpenMP threading (host code only) in Hydrogen
LBANN_SB_FWD_Hydrogen_Hydrogen_ENABLE_OPENMP:BOOL=ON

//No help, variable specified on the command line.
LBANN_SB_FWD_Hydrogen_Hydrogen_ENABLE_TESTING:UNINITIALIZED=OFF

//No help, variable specified on the command line.
LBANN_SB_FWD_Hydrogen_Hydrogen_ENABLE_UNIT_TESTS:UNINITIALIZED=OFF

//Hydrogen: Allow a fallback search for system blas/lapack libraries
// in Hydrogen
LBANN_SB_FWD_Hydrogen_Hydrogen_GENERAL_LAPACK_FALLBACK:BOOL=ON

//Hydrogen: Use 64-bit indexing in Hydrogen
LBANN_SB_FWD_Hydrogen_Hydrogen_USE_64BIT_INTS:BOOL=ON

//Enable the jpeg-turbo static linkage.
LBANN_SB_FWD_JPEG-TURBO_ENABLE_STATIC:BOOL=ON

//No help, variable specified on the command line.
LBANN_SB_FWD_LBANN_CMAKE_BUILD_TYPE:UNINITIALIZED=Release

//No help, variable specified on the command line.
LBANN_SB_FWD_LBANN_CMAKE_CXX_FLAGS_RELEASE:UNINITIALIZED=-O3 -DNDEBUG -g3

//No help, variable specified on the command line.
LBANN_SB_FWD_LBANN_CMAKE_EXE_LINKER_FLAGS:UNINITIALIZED=-fuse-ld=gold

//No help, variable specified on the command line.
LBANN_SB_FWD_LBANN_CMAKE_EXPORT_COMPILE_COMMANDS:UNINITIALIZED=ON

//No help, variable specified on the command line.
LBANN_SB_FWD_LBANN_CMAKE_SHARED_LINKER_FLAGS:UNINITIALIZED=-fuse-ld=gold

//No help, variable specified on the command line.
LBANN_SB_FWD_LBANN_CUDNN_DIR:UNINITIALIZED=/usr/workspace/brain/cudnn/cudnn-8.9.7/cuda_11_ppc64le

//No help, variable specified on the command line.
LBANN_SB_FWD_LBANN_LBANN_DATATYPE:UNINITIALIZED=float

//Build with -Werror
LBANN_SB_FWD_LBANN_LBANN_WARNINGS_AS_ERRORS:BOOL=OFF

//Build LBANN with Caliper support
LBANN_SB_FWD_LBANN_LBANN_WITH_CALIPER:BOOL=OFF

//No help, variable specified on the command line.
LBANN_SB_FWD_LBANN_LBANN_WITH_DISTCONV:UNINITIALIZED=ON

//No help, variable specified on the command line.
LBANN_SB_FWD_LBANN_LBANN_WITH_NVPROF:UNINITIALIZED=ON

//No help, variable specified on the command line.
LBANN_SB_FWD_LBANN_LBANN_WITH_TBINF:UNINITIALIZED=OFF

//No help, variable specified on the command line.
LBANN_SB_FWD_LBANN_LBANN_WITH_UNIT_TESTING:UNINITIALIZED=ON

//No help, variable specified on the command line.
LBANN_SB_FWD_LBANN_cuTENSOR_DIR:UNINITIALIZED=/usr/workspace/brain/cutensor/cutensor-1.7.0.1/libcutensor-linux-ppc64le-1.7.0.1-archive

//NCCL: Build with address sanitizer enabled
LBANN_SB_FWD_NCCL_ASAN:BOOL=OFF

//NCCL: Keep intermediate files generated during compilation
LBANN_SB_FWD_NCCL_KEEP:BOOL=OFF

//NCCL: Build with tracing enabled
LBANN_SB_FWD_NCCL_TRACE:BOOL=OFF

//NCCL: Print build commands?
LBANN_SB_FWD_NCCL_VERBOSE:BOOL=ON

//OpenCV: Build binaries of Android examples with native libraries
LBANN_SB_FWD_OpenCV_ANDROID_EXAMPLES_WITH_LIBS:BOOL=OFF

//OpenCV: Build examples for Android platform
LBANN_SB_FWD_OpenCV_BUILD_ANDROID_EXAMPLES:BOOL=OFF

//OpenCV: Build platform-specific package for Google Play
LBANN_SB_FWD_OpenCV_BUILD_ANDROID_PACKAGE:BOOL=OFF

//OpenCV: Build OpenCV Manager for Google Play
LBANN_SB_FWD_OpenCV_BUILD_ANDROID_SERVICE:BOOL=OFF

//OpenCV: Build CUDA modules stubs when no CUDA SDK
LBANN_SB_FWD_OpenCV_BUILD_CUDA_STUBS:BOOL=OFF

//OpenCV: Create build rules for OpenCV Documentation
LBANN_SB_FWD_OpenCV_BUILD_DOCS:BOOL=OFF

//OpenCV: Build all examples
LBANN_SB_FWD_OpenCV_BUILD_EXAMPLES:BOOL=OFF

//OpenCV: Create fat java wrapper containing the whole OpenCV library
LBANN_SB_FWD_OpenCV_BUILD_FAT_JAVA_LIB:BOOL=OFF

//OpenCV: Build IPP IW from source
LBANN_SB_FWD_OpenCV_BUILD_IPP_IW:BOOL=OFF

//OpenCV: Build Intel ITT from source
LBANN_SB_FWD_OpenCV_BUILD_ITT:BOOL=ON

//OpenCV: Build libjasper from source
LBANN_SB_FWD_OpenCV_BUILD_JASPER:BOOL=OFF

//OpenCV: Build openexr from source
LBANN_SB_FWD_OpenCV_BUILD_OPENEXR:BOOL=OFF

//OpenCV: Create build rules for OpenCV Documentation
LBANN_SB_FWD_OpenCV_BUILD_PACKAGE:BOOL=OFF

//OpenCV: Build performance tests
LBANN_SB_FWD_OpenCV_BUILD_PERF_TESTS:BOOL=OFF

//OpenCV: Build libpng from source
LBANN_SB_FWD_OpenCV_BUILD_PNG:BOOL=ON

//OpenCV: Build shared libraries instead of static ones
LBANN_SB_FWD_OpenCV_BUILD_SHARED_LIBS:BOOL=ON

//OpenCV: Download and build TBB from source
LBANN_SB_FWD_OpenCV_BUILD_TBB:BOOL=OFF

//OpenCV: Build accuracy & regression tests
LBANN_SB_FWD_OpenCV_BUILD_TESTS:BOOL=OFF

//OpenCV: Build libtiff from source
LBANN_SB_FWD_OpenCV_BUILD_TIFF:BOOL=ON

//OpenCV: Build tiny gpu module with limited image format support
LBANN_SB_FWD_OpenCV_BUILD_TINY_GPU_MODULE:BOOL=OFF

//OpenCV: Include debug info into debug libs (not MSCV only)
LBANN_SB_FWD_OpenCV_BUILD_WITH_DEBUG_INFO:BOOL=OFF

//OpenCV: Enables dynamic linking of IPP (only for standalone IPP)
LBANN_SB_FWD_OpenCV_BUILD_WITH_DYNAMIC_IPP:BOOL=OFF

//OpenCV: Enables use of staticaly linked CRT for staticaly linked
// OpenCV
LBANN_SB_FWD_OpenCV_BUILD_WITH_STATIC_CRT:BOOL=OFF

//OpenCV: Build zlib from source
LBANN_SB_FWD_OpenCV_BUILD_ZLIB:BOOL=ON

//OpenCV: Build utility applications
LBANN_SB_FWD_OpenCV_BUILD_opencv_apps:BOOL=OFF

//OpenCV: Enable calib3d module
LBANN_SB_FWD_OpenCV_BUILD_opencv_calib3d:BOOL=OFF

//OpenCV: Enable contrib module
LBANN_SB_FWD_OpenCV_BUILD_opencv_contrib:BOOL=OFF

//OpenCV: Enable core module
LBANN_SB_FWD_OpenCV_BUILD_opencv_core:BOOL=ON

//OpenCV: Build dnn module and protobuf
LBANN_SB_FWD_OpenCV_BUILD_opencv_dnn:BOOL=OFF

//OpenCV: Enable features2d module
LBANN_SB_FWD_OpenCV_BUILD_opencv_features2d:BOOL=OFF

//OpenCV: Enable flann module
LBANN_SB_FWD_OpenCV_BUILD_opencv_flann:BOOL=OFF

//OpenCV: Enable gpu module
LBANN_SB_FWD_OpenCV_BUILD_opencv_gpu:BOOL=OFF

//OpenCV: Enable highgui module
LBANN_SB_FWD_OpenCV_BUILD_opencv_highgui:BOOL=OFF

//OpenCV: Enable imgproc module
LBANN_SB_FWD_OpenCV_BUILD_opencv_imgproc:BOOL=ON

//OpenCV: Enable java module
LBANN_SB_FWD_OpenCV_BUILD_opencv_java:BOOL=OFF

//OpenCV: Enable legacy module
LBANN_SB_FWD_OpenCV_BUILD_opencv_legacy:BOOL=OFF

//OpenCV: Enable ml module
LBANN_SB_FWD_OpenCV_BUILD_opencv_ml:BOOL=OFF

//OpenCV: Enable nonfree module
LBANN_SB_FWD_OpenCV_BUILD_opencv_nonfree:BOOL=OFF

//OpenCV: Enable objdetect module
LBANN_SB_FWD_OpenCV_BUILD_opencv_objdetect:BOOL=OFF

//OpenCV: Enable photo module
LBANN_SB_FWD_OpenCV_BUILD_opencv_photo:BOOL=OFF

//OpenCV: Enable python module
LBANN_SB_FWD_OpenCV_BUILD_opencv_python:BOOL=OFF

//OpenCV: Enable python2 module
LBANN_SB_FWD_OpenCV_BUILD_opencv_python2:BOOL=OFF

//OpenCV: Enable python3 module
LBANN_SB_FWD_OpenCV_BUILD_opencv_python3:BOOL=OFF

//OpenCV: Enable stitching module
LBANN_SB_FWD_OpenCV_BUILD_opencv_stitching:BOOL=OFF

//OpenCV: Enable superres module
LBANN_SB_FWD_OpenCV_BUILD_opencv_superres:BOOL=OFF

//OpenCV: Enable ts module
LBANN_SB_FWD_OpenCV_BUILD_opencv_ts:BOOL=OFF

//OpenCV: Enable video module
LBANN_SB_FWD_OpenCV_BUILD_opencv_video:BOOL=OFF

//OpenCV: Enable videoio module
LBANN_SB_FWD_OpenCV_BUILD_opencv_videoio:BOOL=OFF

//OpenCV: Enable videostab module
LBANN_SB_FWD_OpenCV_BUILD_opencv_videostab:BOOL=OFF

//OpenCV: Enable world module
LBANN_SB_FWD_OpenCV_BUILD_opencv_world:BOOL=OFF

//OpenCV: Disable explicit optimized code
LBANN_SB_FWD_OpenCV_CV_DISABLE_OPTIMIZATION:BOOL=OFF

//OpenCV: Use intrinsic-based optimized code
LBANN_SB_FWD_OpenCV_CV_ENABLE_INTRINSICS:BOOL=ON

//OpenCV: Enable OpenCV code trace
LBANN_SB_FWD_OpenCV_CV_TRACE:BOOL=OFF

//OpenCV: Enabled dynamic CUDA linkage
LBANN_SB_FWD_OpenCV_DYNAMIC_CUDA:BOOL=OFF

//OpenCV: Enable hardening of the resulting binaries
LBANN_SB_FWD_OpenCV_ENABLE_BUILD_HARDENING:BOOL=OFF

//OpenCV: Use ccache
LBANN_SB_FWD_OpenCV_ENABLE_CCACHE:BOOL=OFF

//OpenCV: Enable coverage collection with  GCov
LBANN_SB_FWD_OpenCV_ENABLE_COVERAGE:BOOL=OFF

//OpenCV: Enable -ffast-math (not recommended for GCC 4.6.x)
LBANN_SB_FWD_OpenCV_ENABLE_FAST_MATH:BOOL=ON

//OpenCV: Enable GNU STL Debug mode (defines _GLIBCXX_DEBUG)
LBANN_SB_FWD_OpenCV_ENABLE_GNU_STL_DEBUG:BOOL=OFF

//OpenCV: Collect implementation data on function call
LBANN_SB_FWD_OpenCV_ENABLE_IMPL_COLLECTION:BOOL=OFF

//OpenCV: Instrument functions to collect calls trace and performance
LBANN_SB_FWD_OpenCV_ENABLE_INSTRUMENTATION:BOOL=OFF

//OpenCV: Build VS2013 with Visual Studio 2013 libraries
LBANN_SB_FWD_OpenCV_ENABLE_LIBVS2013:BOOL=OFF

//OpenCV: Enable NEON instructions
LBANN_SB_FWD_OpenCV_ENABLE_NEON:BOOL=OFF

//OpenCV: Show all warnings even if they are too noisy
LBANN_SB_FWD_OpenCV_ENABLE_NOISY_WARNINGS:BOOL=OFF

//OpenCV: Enable non-free algorithms
LBANN_SB_FWD_OpenCV_ENABLE_NONFREE:BOOL=OFF

//OpenCV: Enable -fomit-frame-pointer for GCC
LBANN_SB_FWD_OpenCV_ENABLE_OMIT_FRAME_POINTER:BOOL=ON

//OpenCV: Enable PowerPC for GCC
LBANN_SB_FWD_OpenCV_ENABLE_POWERPC:BOOL=ON

//OpenCV: Use precompiled headers
LBANN_SB_FWD_OpenCV_ENABLE_PRECOMPILED_HEADERS:BOOL=OFF

//OpenCV: Enable profiling in the GCC compiler (Add flags: -g -pg)
LBANN_SB_FWD_OpenCV_ENABLE_PROFILING:BOOL=ON

//OpenCV: Solution folder in Visual Studio or in other IDEs
LBANN_SB_FWD_OpenCV_ENABLE_SOLUTION_FOLDERS:BOOL=OFF

//OpenCV: Enable VFPv3-D32 instructions
LBANN_SB_FWD_OpenCV_ENABLE_VFPV3:BOOL=OFF

//OpenCV: Build with Windows Phone 8.0 SDK
LBANN_SB_FWD_OpenCV_ENABLE_WINPHONESDK80:BOOL=OFF

//OpenCV: Build VS2013 with Windows Phone 8.1 SDK
LBANN_SB_FWD_OpenCV_ENABLE_WINPHONESDK81:BOOL=OFF

//OpenCV: Build with Windows Runtime support
LBANN_SB_FWD_OpenCV_ENABLE_WINRT_MODE:BOOL=OFF

//OpenCV: Build with Windows Runtime native C++ support
LBANN_SB_FWD_OpenCV_ENABLE_WINRT_MODE_NATIVE:BOOL=OFF

//OpenCV: Build VS2013 with Windows 8.1 SDK
LBANN_SB_FWD_OpenCV_ENABLE_WINSDK81:BOOL=OFF

//OpenCV: Generate XML file for abi_compliance_checker tool
LBANN_SB_FWD_OpenCV_GENERATE_ABI_DESCRIPTOR:BOOL=OFF

//OpenCV: Install Android examples
LBANN_SB_FWD_OpenCV_INSTALL_ANDROID_EXAMPLES:BOOL=OFF

//OpenCV: Change install rules to build the distribution package
LBANN_SB_FWD_OpenCV_INSTALL_CREATE_DISTRIB:BOOL=OFF

//OpenCV: Install C examples
LBANN_SB_FWD_OpenCV_INSTALL_C_EXAMPLES:BOOL=OFF

//OpenCV: Install Python examples
LBANN_SB_FWD_OpenCV_INSTALL_PYTHON_EXAMPLES:BOOL=OFF

//OpenCV: Install accuracy and performance test binaries and test
// data
LBANN_SB_FWD_OpenCV_INSTALL_TESTS:BOOL=OFF

//OpenCV: Enables mangled install paths
LBANN_SB_FWD_OpenCV_INSTALL_TO_MANGLED_PATHS:BOOL=OFF

//OpenCV: Treat warnings as errors
LBANN_SB_FWD_OpenCV_WARNINGS_ARE_ERRORS:BOOL=OFF

//OpenCV: Include IEEE1394 support
LBANN_SB_FWD_OpenCV_WITH_1394:BOOL=OFF

//OpenCV: Include Aravis GigE support
LBANN_SB_FWD_OpenCV_WITH_ARAVIS:BOOL=OFF

//OpenCV: Use AVFoundation for Video I/O (iOS/Mac)
LBANN_SB_FWD_OpenCV_WITH_AVFOUNDATION:BOOL=OFF

//OpenCV: Use Carbon for UI instead of Cocoa
LBANN_SB_FWD_OpenCV_WITH_CARBON:BOOL=OFF

//OpenCV: Use NVidia carotene acceleration library for ARM platform
LBANN_SB_FWD_OpenCV_WITH_CAROTENE:BOOL=OFF

//OpenCV: Include Clp support (EPL)
LBANN_SB_FWD_OpenCV_WITH_CLP:BOOL=OFF

//OpenCV: Use cpufeatures Android library
LBANN_SB_FWD_OpenCV_WITH_CPUFEATURES:BOOL=OFF

//OpenCV: Include C= support
LBANN_SB_FWD_OpenCV_WITH_CSTRIPES:BOOL=OFF

//OpenCV: Include NVidia cuBLAS library support
LBANN_SB_FWD_OpenCV_WITH_CUBLAS:BOOL=OFF

//OpenCV: Include NVidia Cuda Runtime support
LBANN_SB_FWD_OpenCV_WITH_CUDA:BOOL=OFF

//OpenCV: Include NVidia cuFFT library support
LBANN_SB_FWD_OpenCV_WITH_CUFFT:BOOL=OFF

//OpenCV: Include DirectX support
LBANN_SB_FWD_OpenCV_WITH_DIRECTX:BOOL=OFF

//OpenCV: Build VideoIO with DirectShow support
LBANN_SB_FWD_OpenCV_WITH_DSHOW:BOOL=OFF

//OpenCV: Include Eigen2/Eigen3 support
LBANN_SB_FWD_OpenCV_WITH_EIGEN:BOOL=OFF

//OpenCV: Include FFMPEG support
LBANN_SB_FWD_OpenCV_WITH_FFMPEG:BOOL=OFF

//OpenCV: Include GDAL Support
LBANN_SB_FWD_OpenCV_WITH_GDAL:BOOL=OFF

//OpenCV: Include DICOM support
LBANN_SB_FWD_OpenCV_WITH_GDCM:BOOL=OFF

//OpenCV: Include Smartek GigE support
LBANN_SB_FWD_OpenCV_WITH_GIGEAPI:BOOL=OFF

//OpenCV: Include gPhoto2 library support
LBANN_SB_FWD_OpenCV_WITH_GPHOTO2:BOOL=OFF

//OpenCV: Include Gstreamer support
LBANN_SB_FWD_OpenCV_WITH_GSTREAMER:BOOL=OFF

//OpenCV: Enable Gstreamer 0.10 support (instead of 1.x)
LBANN_SB_FWD_OpenCV_WITH_GSTREAMER_0_10:BOOL=OFF

//OpenCV: Include GTK support
LBANN_SB_FWD_OpenCV_WITH_GTK:BOOL=OFF

//OpenCV: Use GTK version 2
LBANN_SB_FWD_OpenCV_WITH_GTK_2_X:BOOL=OFF

//OpenCV: Include Halide support
LBANN_SB_FWD_OpenCV_WITH_HALIDE:BOOL=OFF

//OpenCV: ImageIO support for OS X
LBANN_SB_FWD_OpenCV_WITH_IMAGEIO:BOOL=OFF

//OpenCV: Include Intel Perceptual Computing support
LBANN_SB_FWD_OpenCV_WITH_INTELPERC:BOOL=OFF

//OpenCV: Include Intel IPP support
LBANN_SB_FWD_OpenCV_WITH_IPP:BOOL=ON

//OpenCV: Include Intel IPP_A support
LBANN_SB_FWD_OpenCV_WITH_IPP_A:BOOL=OFF

//OpenCV: Include Intel ITT support
LBANN_SB_FWD_OpenCV_WITH_ITT:BOOL=ON

//OpenCV: Include JPEG2K support
LBANN_SB_FWD_OpenCV_WITH_JASPER:BOOL=OFF

//OpenCV: Include JPEG support
LBANN_SB_FWD_OpenCV_WITH_JPEG:BOOL=ON

//OpenCV: Include Lapack library support
LBANN_SB_FWD_OpenCV_WITH_LAPACK:BOOL=OFF

//OpenCV: Use libv4l for Video 4 Linux support
LBANN_SB_FWD_OpenCV_WITH_LIBV4L:BOOL=OFF

//OpenCV: Include Matlab support
LBANN_SB_FWD_OpenCV_WITH_MATLAB:BOOL=OFF

//OpenCV: Include Intel Media SDK support
LBANN_SB_FWD_OpenCV_WITH_MFX:BOOL=OFF

//OpenCV: Build VideoIO with Media Foundation support
LBANN_SB_FWD_OpenCV_WITH_MSMF:BOOL=OFF

//OpenCV: Include NVidia Video Decoding library support
LBANN_SB_FWD_OpenCV_WITH_NVCUVID:BOOL=OFF

//OpenCV: Include OpenCL Runtime support
LBANN_SB_FWD_OpenCV_WITH_OPENCL:BOOL=OFF

//OpenCV: Include AMD OpenCL BLAS library support
LBANN_SB_FWD_OpenCV_WITH_OPENCLAMDBLAS:BOOL=OFF

//OpenCV: Include AMD OpenCL FFT library support
LBANN_SB_FWD_OpenCV_WITH_OPENCLAMDFFT:BOOL=OFF

//OpenCV: Include OpenCL Shared Virtual Memory support
LBANN_SB_FWD_OpenCV_WITH_OPENCL_SVM:BOOL=OFF

//OpenCV: Include ILM support via OpenEXR
LBANN_SB_FWD_OpenCV_WITH_OPENEXR:BOOL=OFF

//OpenCV: Include OpenGL support
LBANN_SB_FWD_OpenCV_WITH_OPENGL:BOOL=OFF

//OpenCV: Include OpenMP support
LBANN_SB_FWD_OpenCV_WITH_OPENMP:BOOL=OFF

//OpenCV: Include OpenNI support
LBANN_SB_FWD_OpenCV_WITH_OPENNI:BOOL=OFF

//OpenCV: Include OpenNI2 support
LBANN_SB_FWD_OpenCV_WITH_OPENNI2:BOOL=OFF

//OpenCV: Include OpenVX support
LBANN_SB_FWD_OpenCV_WITH_OPENVX:BOOL=OFF

//OpenCV: Include PNG support
LBANN_SB_FWD_OpenCV_WITH_PNG:BOOL=ON

//OpenCV: Use pthreads-based parallel_for
LBANN_SB_FWD_OpenCV_WITH_PTHREADS_PF:BOOL=OFF

//OpenCV: Include Prosilica GigE support
LBANN_SB_FWD_OpenCV_WITH_PVAPI:BOOL=OFF

//OpenCV: Build with Qt Backend support
LBANN_SB_FWD_OpenCV_WITH_QT:BOOL=OFF

//OpenCV: Use QTKit Video I/O backend
LBANN_SB_FWD_OpenCV_WITH_QTKIT:BOOL=OFF

//OpenCV: Use QuickTime for Video I/O
LBANN_SB_FWD_OpenCV_WITH_QUICKTIME:BOOL=OFF

//OpenCV: Include Intel TBB support
LBANN_SB_FWD_OpenCV_WITH_TBB:BOOL=OFF

//OpenCV: Include TIFF support
LBANN_SB_FWD_OpenCV_WITH_TIFF:BOOL=ON

//OpenCV: Include Unicap support (GPL)
LBANN_SB_FWD_OpenCV_WITH_UNICAP:BOOL=OFF

//OpenCV: Include Video 4 Linux support
LBANN_SB_FWD_OpenCV_WITH_V4L:BOOL=OFF

//OpenCV: Include VA support
LBANN_SB_FWD_OpenCV_WITH_VA:BOOL=OFF

//OpenCV: Include Intel VA-API/OpenCL support
LBANN_SB_FWD_OpenCV_WITH_VA_INTEL:BOOL=OFF

//OpenCV: Include Video for Windows support
LBANN_SB_FWD_OpenCV_WITH_VFW:BOOL=OFF

//OpenCV: Include VTK library support (and build opencv_viz module
// eiher)
LBANN_SB_FWD_OpenCV_WITH_VTK:BOOL=OFF

//OpenCV: Include WebP support
LBANN_SB_FWD_OpenCV_WITH_WEBP:BOOL=OFF

//OpenCV: Build with Win32 UI Backend support
LBANN_SB_FWD_OpenCV_WITH_WIN32UI:BOOL=OFF

//OpenCV: Include XIMEA cameras support
LBANN_SB_FWD_OpenCV_WITH_XIMEA:BOOL=OFF

//OpenCV: Include Xine support (GPL)
LBANN_SB_FWD_OpenCV_WITH_XINE:BOOL=OFF

//cereal value-forward for JUST_INSTALL_CEREAL
LBANN_SB_FWD_cereal_JUST_INSTALL_CEREAL:BOOL=ON

//CEREAL value-forward for WITH_WERROR
LBANN_SB_FWD_cereal_WITH_WERROR:BOOL=OFF

//Build tests for protobuf?
LBANN_SB_FWD_protobuf_protobuf_BUILD_TESTS:BOOL=OFF

//The build RPATHs to add to HDF5.
LBANN_SB_HDF5_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for HDF5
LBANN_SB_HDF5_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for HDF5?
LBANN_SB_HDF5_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_HDF5_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for HDF5
LBANN_SB_HDF5_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone HDF5?
LBANN_SB_HDF5_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for HDF5.
LBANN_SB_HDF5_CMAKE_GENERATOR:STRING=Ninja

//The CXX compiler to use for HDF5.
LBANN_SB_HDF5_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for HDF5.
LBANN_SB_HDF5_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for HDF5 in RELEASE mode.
LBANN_SB_HDF5_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for HDF5.
LBANN_SB_HDF5_CXX_STANDARD:STRING=17

//The C compiler to use for HDF5.
LBANN_SB_HDF5_C_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/gcc

//The C compiler flags to use for HDF5.
LBANN_SB_HDF5_C_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The C compiler flags to use for HDF5 in RELEASE mode.
LBANN_SB_HDF5_C_FLAGS_RELEASE:STRING=

//The C standard to use for HDF5.
LBANN_SB_HDF5_C_STANDARD:STRING=

//The exe linker flags for HDF5.
LBANN_SB_HDF5_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for HDF5 in RELEASE mode.
LBANN_SB_HDF5_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HTTPS URL CMake installation prefix for HDF5.
LBANN_SB_HDF5_HTTPS_URL:STRING=https://github.com/HDFGroup/hdf5

//Remove toolchain-specific paths from install RPATH for HDF5
LBANN_SB_HDF5_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to HDF5.
LBANN_SB_HDF5_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for HDF5
LBANN_SB_HDF5_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for HDF5?
LBANN_SB_HDF5_IPO:BOOL=OFF

//Force PIC for HDF5?
LBANN_SB_HDF5_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_HDF5_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/hdf5

//The shared linker flags for HDF5.
LBANN_SB_HDF5_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for HDF5 in RELEASE mode.
LBANN_SB_HDF5_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to HDF5
LBANN_SB_HDF5_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to HDF5
LBANN_SB_HDF5_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to HDF5
LBANN_SB_HDF5_SKIP_RPATH:BOOL=OFF

//The source directory for HDF5.
LBANN_SB_HDF5_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/hdf5/src

//The SSH URL CMake installation prefix for HDF5.
LBANN_SB_HDF5_SSH_URL:STRING=git@github.com:HDFGroup/hdf5

//The static linker flags for HDF5.
LBANN_SB_HDF5_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for HDF5 in RELEASE mode.
LBANN_SB_HDF5_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for HDF5.
LBANN_SB_HDF5_TAG:STRING=hdf5-1_10_9

//The URL to use to clone HDF5.
LBANN_SB_HDF5_URL:STRING=https://github.com/HDFGroup/hdf5

//The build RPATHs to add to Hydrogen.
LBANN_SB_Hydrogen_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for Hydrogen
LBANN_SB_Hydrogen_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for Hydrogen?
LBANN_SB_Hydrogen_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_Hydrogen_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for Hydrogen
LBANN_SB_Hydrogen_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone Hydrogen?
LBANN_SB_Hydrogen_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for Hydrogen.
LBANN_SB_Hydrogen_CMAKE_GENERATOR:STRING=Ninja

//The CUDA architectures for Hydrogen.
LBANN_SB_Hydrogen_CUDA_ARCHITECTURES:STRING=70

//The CUDA compiler to use for Hydrogen.
LBANN_SB_Hydrogen_CUDA_COMPILER:STRING=/usr/tce/packages/cuda/cuda-11.8.0/bin/nvcc

//The CUDA compiler flags to use for Hydrogen.
LBANN_SB_Hydrogen_CUDA_FLAGS:STRING=

//The CUDA compiler flags to use for Hydrogen in RELEASE mode.
LBANN_SB_Hydrogen_CUDA_FLAGS_RELEASE:STRING=

//The CUDA HOST compiler to use for Hydrogen.
LBANN_SB_Hydrogen_CUDA_HOST_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CUDA standard to use for Hydrogen.
LBANN_SB_Hydrogen_CUDA_STANDARD:STRING=17

//The CXX compiler to use for Hydrogen.
LBANN_SB_Hydrogen_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for Hydrogen.
LBANN_SB_Hydrogen_CXX_FLAGS:STRING=-Wno-deprecated-declarations

//The CXX compiler flags to use for Hydrogen in RELEASE mode.
LBANN_SB_Hydrogen_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for Hydrogen.
LBANN_SB_Hydrogen_CXX_STANDARD:STRING=17

//The exe linker flags for Hydrogen.
LBANN_SB_Hydrogen_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for Hydrogen in RELEASE mode.
LBANN_SB_Hydrogen_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HIP architectures for Hydrogen.
LBANN_SB_Hydrogen_HIP_ARCHITECTURES:STRING=

//The HIP compiler to use for Hydrogen.
LBANN_SB_Hydrogen_HIP_COMPILER:STRING=NOTFOUND

//The HIP compiler flags to use for Hydrogen.
LBANN_SB_Hydrogen_HIP_FLAGS:STRING=

//The HIP compiler flags to use for Hydrogen in RELEASE mode.
LBANN_SB_Hydrogen_HIP_FLAGS_RELEASE:STRING=

//The HIP standard to use for Hydrogen.
LBANN_SB_Hydrogen_HIP_STANDARD:STRING=

//The HTTPS URL CMake installation prefix for Hydrogen.
LBANN_SB_Hydrogen_HTTPS_URL:STRING=https://github.com/llnl/Elemental.git

//Remove toolchain-specific paths from install RPATH for Hydrogen
LBANN_SB_Hydrogen_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to Hydrogen.
LBANN_SB_Hydrogen_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for Hydrogen
LBANN_SB_Hydrogen_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for Hydrogen?
LBANN_SB_Hydrogen_IPO:BOOL=OFF

//Force PIC for Hydrogen?
LBANN_SB_Hydrogen_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_Hydrogen_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/hydrogen

//The shared linker flags for Hydrogen.
LBANN_SB_Hydrogen_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for Hydrogen in RELEASE mode.
LBANN_SB_Hydrogen_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to Hydrogen
LBANN_SB_Hydrogen_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to Hydrogen
LBANN_SB_Hydrogen_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to Hydrogen
LBANN_SB_Hydrogen_SKIP_RPATH:BOOL=OFF

//The source directory for Hydrogen.
LBANN_SB_Hydrogen_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/hydrogen/src

//The SSH URL CMake installation prefix for Hydrogen.
LBANN_SB_Hydrogen_SSH_URL:STRING=git@github.com:llnl/Elemental.git

//The static linker flags for Hydrogen.
LBANN_SB_Hydrogen_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for Hydrogen in RELEASE mode.
LBANN_SB_Hydrogen_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for Hydrogen.
LBANN_SB_Hydrogen_TAG:STRING=hydrogen

//The URL to use to clone Hydrogen.
LBANN_SB_Hydrogen_URL:STRING=https://github.com/llnl/Elemental.git

//The ASM_NASM compiler to use for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_ASM_NASM_COMPILER:STRING=/usr/bin/nasm

//The ASM_NASM compiler flags to use for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_ASM_NASM_FLAGS:STRING=

//The ASM_NASM compiler flags to use for JPEG-TURBO in RELEASE
// mode.
LBANN_SB_JPEG-TURBO_ASM_NASM_FLAGS_RELEASE:STRING=

//The ASM_NASM standard to use for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_ASM_NASM_STANDARD:STRING=

//The build RPATHs to add to JPEG-TURBO.
LBANN_SB_JPEG-TURBO_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for JPEG-TURBO
LBANN_SB_JPEG-TURBO_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for JPEG-TURBO?
LBANN_SB_JPEG-TURBO_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_JPEG-TURBO_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for JPEG-TURBO
LBANN_SB_JPEG-TURBO_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone JPEG-TURBO?
LBANN_SB_JPEG-TURBO_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_CMAKE_GENERATOR:STRING=Ninja

//The CXX compiler to use for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for JPEG-TURBO in RELEASE mode.
LBANN_SB_JPEG-TURBO_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_CXX_STANDARD:STRING=17

//The C compiler to use for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_C_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/gcc

//The C compiler flags to use for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_C_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The C compiler flags to use for JPEG-TURBO in RELEASE mode.
LBANN_SB_JPEG-TURBO_C_FLAGS_RELEASE:STRING=

//The C standard to use for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_C_STANDARD:STRING=

//The exe linker flags for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for JPEG-TURBO in RELEASE mode.
LBANN_SB_JPEG-TURBO_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HTTPS URL CMake installation prefix for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_HTTPS_URL:STRING=https://github.com/libjpeg-turbo/libjpeg-turbo

//Remove toolchain-specific paths from install RPATH for JPEG-TURBO
LBANN_SB_JPEG-TURBO_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to JPEG-TURBO.
LBANN_SB_JPEG-TURBO_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for JPEG-TURBO
LBANN_SB_JPEG-TURBO_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for JPEG-TURBO?
LBANN_SB_JPEG-TURBO_IPO:BOOL=OFF

//Force PIC for JPEG-TURBO?
LBANN_SB_JPEG-TURBO_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_JPEG-TURBO_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/jpeg-turbo

//The shared linker flags for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for JPEG-TURBO in RELEASE mode.
LBANN_SB_JPEG-TURBO_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to JPEG-TURBO
LBANN_SB_JPEG-TURBO_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to JPEG-TURBO
LBANN_SB_JPEG-TURBO_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to JPEG-TURBO
LBANN_SB_JPEG-TURBO_SKIP_RPATH:BOOL=OFF

//The source directory for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/jpeg-turbo/src

//The SSH URL CMake installation prefix for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_SSH_URL:STRING=git@github.com:libjpeg-turbo/libjpeg-turbo

//The static linker flags for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for JPEG-TURBO in RELEASE mode.
LBANN_SB_JPEG-TURBO_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for JPEG-TURBO.
LBANN_SB_JPEG-TURBO_TAG:STRING=2.0.3

//The URL to use to clone JPEG-TURBO.
LBANN_SB_JPEG-TURBO_URL:STRING=https://github.com/libjpeg-turbo/libjpeg-turbo

//The build RPATHs to add to LBANN.
LBANN_SB_LBANN_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for LBANN
LBANN_SB_LBANN_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for LBANN?
LBANN_SB_LBANN_BUILD_SHARED_LIBS:BOOL=ON

//The CMake build type for this build.
LBANN_SB_LBANN_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for LBANN
LBANN_SB_LBANN_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone LBANN?
LBANN_SB_LBANN_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for LBANN.
LBANN_SB_LBANN_CMAKE_GENERATOR:STRING=Ninja

//The CUDA architectures for LBANN.
LBANN_SB_LBANN_CUDA_ARCHITECTURES:STRING=70

//The CUDA compiler to use for LBANN.
LBANN_SB_LBANN_CUDA_COMPILER:STRING=/usr/tce/packages/cuda/cuda-11.8.0/bin/nvcc

//The CUDA compiler flags to use for LBANN.
LBANN_SB_LBANN_CUDA_FLAGS:STRING=

//The CUDA compiler flags to use for LBANN in RELEASE mode.
LBANN_SB_LBANN_CUDA_FLAGS_RELEASE:STRING=

//The CUDA HOST compiler to use for LBANN.
LBANN_SB_LBANN_CUDA_HOST_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CUDA standard to use for LBANN.
LBANN_SB_LBANN_CUDA_STANDARD:STRING=17

//The CXX compiler to use for LBANN.
LBANN_SB_LBANN_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for LBANN.
LBANN_SB_LBANN_CXX_FLAGS:STRING=-Wno-deprecated-declarations -Wall -Wextra

//The CXX compiler flags to use for LBANN in RELEASE mode.
LBANN_SB_LBANN_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for LBANN.
LBANN_SB_LBANN_CXX_STANDARD:STRING=17

//The C compiler to use for LBANN.
LBANN_SB_LBANN_C_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/gcc

//The C compiler flags to use for LBANN.
LBANN_SB_LBANN_C_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The C compiler flags to use for LBANN in RELEASE mode.
LBANN_SB_LBANN_C_FLAGS_RELEASE:STRING=

//The C standard to use for LBANN.
LBANN_SB_LBANN_C_STANDARD:STRING=

//Enable the utility targets in LBANN
LBANN_SB_LBANN_ENABLE_EXTRA_UTILS:BOOL=OFF

//The exe linker flags for LBANN.
LBANN_SB_LBANN_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for LBANN in RELEASE mode.
LBANN_SB_LBANN_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HIP architectures for LBANN.
LBANN_SB_LBANN_HIP_ARCHITECTURES:STRING=

//The HIP compiler to use for LBANN.
LBANN_SB_LBANN_HIP_COMPILER:STRING=NOTFOUND

//The HIP compiler flags to use for LBANN.
LBANN_SB_LBANN_HIP_FLAGS:STRING=

//The HIP compiler flags to use for LBANN in RELEASE mode.
LBANN_SB_LBANN_HIP_FLAGS_RELEASE:STRING=

//The HIP standard to use for LBANN.
LBANN_SB_LBANN_HIP_STANDARD:STRING=

//The HTTPS URL CMake installation prefix for LBANN.
LBANN_SB_LBANN_HTTPS_URL:STRING=https://github.com/LLNL/lbann.git

//Remove toolchain-specific paths from install RPATH for LBANN
LBANN_SB_LBANN_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to LBANN.
LBANN_SB_LBANN_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for LBANN
LBANN_SB_LBANN_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for LBANN?
LBANN_SB_LBANN_IPO:BOOL=OFF

//Force PIC for LBANN?
LBANN_SB_LBANN_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_LBANN_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install

//The shared linker flags for LBANN.
LBANN_SB_LBANN_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for LBANN in RELEASE mode.
LBANN_SB_LBANN_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to LBANN
LBANN_SB_LBANN_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to LBANN
LBANN_SB_LBANN_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to LBANN
LBANN_SB_LBANN_SKIP_RPATH:BOOL=OFF

//The source directory for LBANN.
LBANN_SB_LBANN_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann

//The SSH URL CMake installation prefix for LBANN.
LBANN_SB_LBANN_SSH_URL:STRING=git@github.com:LLNL/lbann.git

//The static linker flags for LBANN.
LBANN_SB_LBANN_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for LBANN in RELEASE mode.
LBANN_SB_LBANN_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for LBANN.
LBANN_SB_LBANN_TAG:STRING=develop

//The URL to use to clone LBANN.
LBANN_SB_LBANN_URL:STRING=https://github.com/LLNL/lbann.git

//The build RPATHs to add to NCCL.
LBANN_SB_NCCL_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for NCCL
LBANN_SB_NCCL_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for NCCL?
LBANN_SB_NCCL_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_NCCL_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for NCCL
LBANN_SB_NCCL_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone NCCL?
LBANN_SB_NCCL_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for NCCL.
LBANN_SB_NCCL_CMAKE_GENERATOR:STRING=Ninja

//The CUDA architectures for NCCL.
LBANN_SB_NCCL_CUDA_ARCHITECTURES:STRING=70

//The CUDA compiler to use for NCCL.
LBANN_SB_NCCL_CUDA_COMPILER:STRING=/usr/tce/packages/cuda/cuda-11.8.0/bin/nvcc

//The CUDA compiler flags to use for NCCL.
LBANN_SB_NCCL_CUDA_FLAGS:STRING=

//The CUDA compiler flags to use for NCCL in RELEASE mode.
LBANN_SB_NCCL_CUDA_FLAGS_RELEASE:STRING=

//The CUDA HOST compiler to use for NCCL.
LBANN_SB_NCCL_CUDA_HOST_COMPILER:STRING=

//The CUDA standard to use for NCCL.
LBANN_SB_NCCL_CUDA_STANDARD:STRING=17

//The CXX compiler to use for NCCL.
LBANN_SB_NCCL_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for NCCL.
LBANN_SB_NCCL_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for NCCL in RELEASE mode.
LBANN_SB_NCCL_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for NCCL.
LBANN_SB_NCCL_CXX_STANDARD:STRING=17

//The C compiler to use for NCCL.
LBANN_SB_NCCL_C_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/gcc

//The C compiler flags to use for NCCL.
LBANN_SB_NCCL_C_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The C compiler flags to use for NCCL in RELEASE mode.
LBANN_SB_NCCL_C_FLAGS_RELEASE:STRING=

//The C standard to use for NCCL.
LBANN_SB_NCCL_C_STANDARD:STRING=

//The exe linker flags for NCCL.
LBANN_SB_NCCL_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for NCCL in RELEASE mode.
LBANN_SB_NCCL_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HTTPS URL CMake installation prefix for NCCL.
LBANN_SB_NCCL_HTTPS_URL:STRING=https://github.com/NVIDIA/nccl

//Remove toolchain-specific paths from install RPATH for NCCL
LBANN_SB_NCCL_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to NCCL.
LBANN_SB_NCCL_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for NCCL
LBANN_SB_NCCL_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for NCCL?
LBANN_SB_NCCL_IPO:BOOL=OFF

//Force PIC for NCCL?
LBANN_SB_NCCL_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_NCCL_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/nccl

//The shared linker flags for NCCL.
LBANN_SB_NCCL_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for NCCL in RELEASE mode.
LBANN_SB_NCCL_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to NCCL
LBANN_SB_NCCL_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to NCCL
LBANN_SB_NCCL_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to NCCL
LBANN_SB_NCCL_SKIP_RPATH:BOOL=OFF

//The source directory for NCCL.
LBANN_SB_NCCL_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/nccl/src

//The SSH URL CMake installation prefix for NCCL.
LBANN_SB_NCCL_SSH_URL:STRING=git@github.com:NVIDIA/nccl

//The static linker flags for NCCL.
LBANN_SB_NCCL_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for NCCL in RELEASE mode.
LBANN_SB_NCCL_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for NCCL.
LBANN_SB_NCCL_TAG:STRING=master

//The URL to use to clone NCCL.
LBANN_SB_NCCL_URL:STRING=https://github.com/NVIDIA/nccl

//The build RPATHs to add to OpenCV.
LBANN_SB_OpenCV_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for OpenCV
LBANN_SB_OpenCV_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for OpenCV?
LBANN_SB_OpenCV_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_OpenCV_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for OpenCV
LBANN_SB_OpenCV_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone OpenCV?
LBANN_SB_OpenCV_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for OpenCV.
LBANN_SB_OpenCV_CMAKE_GENERATOR:STRING=Ninja

//The CXX compiler to use for OpenCV.
LBANN_SB_OpenCV_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for OpenCV.
LBANN_SB_OpenCV_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for OpenCV in RELEASE mode.
LBANN_SB_OpenCV_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for OpenCV.
LBANN_SB_OpenCV_CXX_STANDARD:STRING=17

//The C compiler to use for OpenCV.
LBANN_SB_OpenCV_C_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/gcc

//The C compiler flags to use for OpenCV.
LBANN_SB_OpenCV_C_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The C compiler flags to use for OpenCV in RELEASE mode.
LBANN_SB_OpenCV_C_FLAGS_RELEASE:STRING=

//The C standard to use for OpenCV.
LBANN_SB_OpenCV_C_STANDARD:STRING=

//The exe linker flags for OpenCV.
LBANN_SB_OpenCV_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for OpenCV in RELEASE mode.
LBANN_SB_OpenCV_EXE_LINKER_FLAGS_RELEASE:STRING=

//The Fortran compiler to use for OpenCV.
LBANN_SB_OpenCV_Fortran_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/gfortran

//The Fortran compiler flags to use for OpenCV.
LBANN_SB_OpenCV_Fortran_FLAGS:STRING=

//The Fortran compiler flags to use for OpenCV in RELEASE mode.
LBANN_SB_OpenCV_Fortran_FLAGS_RELEASE:STRING=

//The Fortran standard to use for OpenCV.
LBANN_SB_OpenCV_Fortran_STANDARD:STRING=

//The HTTPS URL CMake installation prefix for OpenCV.
LBANN_SB_OpenCV_HTTPS_URL:STRING=https://github.com/opencv/opencv

//Remove toolchain-specific paths from install RPATH for OpenCV
LBANN_SB_OpenCV_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to OpenCV.
LBANN_SB_OpenCV_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for OpenCV
LBANN_SB_OpenCV_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for OpenCV?
LBANN_SB_OpenCV_IPO:BOOL=OFF

//Force PIC for OpenCV?
LBANN_SB_OpenCV_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_OpenCV_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/opencv

//The shared linker flags for OpenCV.
LBANN_SB_OpenCV_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for OpenCV in RELEASE mode.
LBANN_SB_OpenCV_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to OpenCV
LBANN_SB_OpenCV_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to OpenCV
LBANN_SB_OpenCV_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to OpenCV
LBANN_SB_OpenCV_SKIP_RPATH:BOOL=OFF

//The source directory for OpenCV.
LBANN_SB_OpenCV_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/opencv/src

//The SSH URL CMake installation prefix for OpenCV.
LBANN_SB_OpenCV_SSH_URL:STRING=git@github.com:opencv/opencv

//The static linker flags for OpenCV.
LBANN_SB_OpenCV_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for OpenCV in RELEASE mode.
LBANN_SB_OpenCV_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for OpenCV.
LBANN_SB_OpenCV_TAG:STRING=4.1.0

//The URL to use to clone OpenCV.
LBANN_SB_OpenCV_URL:STRING=https://github.com/opencv/opencv

//The build RPATHs to add to cereal.
LBANN_SB_cereal_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for cereal
LBANN_SB_cereal_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for cereal?
LBANN_SB_cereal_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_cereal_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for cereal
LBANN_SB_cereal_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone cereal?
LBANN_SB_cereal_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for cereal.
LBANN_SB_cereal_CMAKE_GENERATOR:STRING=Ninja

//The CXX compiler to use for cereal.
LBANN_SB_cereal_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for cereal.
LBANN_SB_cereal_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for cereal in RELEASE mode.
LBANN_SB_cereal_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for cereal.
LBANN_SB_cereal_CXX_STANDARD:STRING=17

//The C compiler to use for cereal.
LBANN_SB_cereal_C_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/gcc

//The C compiler flags to use for cereal.
LBANN_SB_cereal_C_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The C compiler flags to use for cereal in RELEASE mode.
LBANN_SB_cereal_C_FLAGS_RELEASE:STRING=

//The C standard to use for cereal.
LBANN_SB_cereal_C_STANDARD:STRING=

//The exe linker flags for cereal.
LBANN_SB_cereal_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for cereal in RELEASE mode.
LBANN_SB_cereal_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HTTPS URL CMake installation prefix for cereal.
LBANN_SB_cereal_HTTPS_URL:STRING=https://github.com/uscilab/cereal.git

//Remove toolchain-specific paths from install RPATH for cereal
LBANN_SB_cereal_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to cereal.
LBANN_SB_cereal_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for cereal
LBANN_SB_cereal_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for cereal?
LBANN_SB_cereal_IPO:BOOL=OFF

//Force PIC for cereal?
LBANN_SB_cereal_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_cereal_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/cereal

//The shared linker flags for cereal.
LBANN_SB_cereal_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for cereal in RELEASE mode.
LBANN_SB_cereal_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to cereal
LBANN_SB_cereal_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to cereal
LBANN_SB_cereal_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to cereal
LBANN_SB_cereal_SKIP_RPATH:BOOL=OFF

//The source directory for cereal.
LBANN_SB_cereal_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/cereal/src

//The SSH URL CMake installation prefix for cereal.
LBANN_SB_cereal_SSH_URL:STRING=git@github.com:uscilab/cereal.git

//The static linker flags for cereal.
LBANN_SB_cereal_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for cereal in RELEASE mode.
LBANN_SB_cereal_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for cereal.
LBANN_SB_cereal_TAG:STRING=v1.3.0

//The URL to use to clone cereal.
LBANN_SB_cereal_URL:STRING=https://github.com/uscilab/cereal.git

//The build RPATHs to add to protobuf.
LBANN_SB_protobuf_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for protobuf
LBANN_SB_protobuf_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for protobuf?
LBANN_SB_protobuf_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_protobuf_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for protobuf
LBANN_SB_protobuf_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone protobuf?
LBANN_SB_protobuf_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for protobuf.
LBANN_SB_protobuf_CMAKE_GENERATOR:STRING=Ninja

//The CXX compiler to use for protobuf.
LBANN_SB_protobuf_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for protobuf.
LBANN_SB_protobuf_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for protobuf in RELEASE mode.
LBANN_SB_protobuf_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for protobuf.
LBANN_SB_protobuf_CXX_STANDARD:STRING=17

//The C compiler to use for protobuf.
LBANN_SB_protobuf_C_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/gcc

//The C compiler flags to use for protobuf.
LBANN_SB_protobuf_C_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The C compiler flags to use for protobuf in RELEASE mode.
LBANN_SB_protobuf_C_FLAGS_RELEASE:STRING=

//The C standard to use for protobuf.
LBANN_SB_protobuf_C_STANDARD:STRING=

//The exe linker flags for protobuf.
LBANN_SB_protobuf_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for protobuf in RELEASE mode.
LBANN_SB_protobuf_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HTTPS URL CMake installation prefix for protobuf.
LBANN_SB_protobuf_HTTPS_URL:STRING=https://github.com/protocolbuffers/protobuf.git

//Remove toolchain-specific paths from install RPATH for protobuf
LBANN_SB_protobuf_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to protobuf.
LBANN_SB_protobuf_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for protobuf
LBANN_SB_protobuf_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for protobuf?
LBANN_SB_protobuf_IPO:BOOL=OFF

//Force PIC for protobuf?
LBANN_SB_protobuf_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_protobuf_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/protobuf

//The shared linker flags for protobuf.
LBANN_SB_protobuf_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for protobuf in RELEASE mode.
LBANN_SB_protobuf_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to protobuf
LBANN_SB_protobuf_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to protobuf
LBANN_SB_protobuf_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to protobuf
LBANN_SB_protobuf_SKIP_RPATH:BOOL=OFF

//The source directory for protobuf.
LBANN_SB_protobuf_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/protobuf/src

//The SSH URL CMake installation prefix for protobuf.
LBANN_SB_protobuf_SSH_URL:STRING=git@github.com:protocolbuffers/protobuf.git

//The static linker flags for protobuf.
LBANN_SB_protobuf_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for protobuf in RELEASE mode.
LBANN_SB_protobuf_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for protobuf.
LBANN_SB_protobuf_TAG:STRING=v21.5

//The URL to use to clone protobuf.
LBANN_SB_protobuf_URL:STRING=https://github.com/protocolbuffers/protobuf.git

//The build RPATHs to add to spdlog.
LBANN_SB_spdlog_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for spdlog
LBANN_SB_spdlog_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for spdlog?
LBANN_SB_spdlog_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_spdlog_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for spdlog
LBANN_SB_spdlog_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone spdlog?
LBANN_SB_spdlog_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for spdlog.
LBANN_SB_spdlog_CMAKE_GENERATOR:STRING=Ninja

//The CXX compiler to use for spdlog.
LBANN_SB_spdlog_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++

//The CXX compiler flags to use for spdlog.
LBANN_SB_spdlog_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64

//The CXX compiler flags to use for spdlog in RELEASE mode.
LBANN_SB_spdlog_CXX_FLAGS_RELEASE:STRING=

//The CXX standard to use for spdlog.
LBANN_SB_spdlog_CXX_STANDARD:STRING=17

//The exe linker flags for spdlog.
LBANN_SB_spdlog_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for spdlog in RELEASE mode.
LBANN_SB_spdlog_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HTTPS URL CMake installation prefix for spdlog.
LBANN_SB_spdlog_HTTPS_URL:STRING=https://github.com/gabime/spdlog

//Remove toolchain-specific paths from install RPATH for spdlog
LBANN_SB_spdlog_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to spdlog.
LBANN_SB_spdlog_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for spdlog
LBANN_SB_spdlog_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for spdlog?
LBANN_SB_spdlog_IPO:BOOL=OFF

//Force PIC for spdlog?
LBANN_SB_spdlog_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_spdlog_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/spdlog

//The shared linker flags for spdlog.
LBANN_SB_spdlog_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for spdlog in RELEASE mode.
LBANN_SB_spdlog_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to spdlog
LBANN_SB_spdlog_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to spdlog
LBANN_SB_spdlog_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to spdlog
LBANN_SB_spdlog_SKIP_RPATH:BOOL=OFF

//The source directory for spdlog.
LBANN_SB_spdlog_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/spdlog/src

//The SSH URL CMake installation prefix for spdlog.
LBANN_SB_spdlog_SSH_URL:STRING=git@github.com:gabime/spdlog

//The static linker flags for spdlog.
LBANN_SB_spdlog_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for spdlog in RELEASE mode.
LBANN_SB_spdlog_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for spdlog.
LBANN_SB_spdlog_TAG:STRING=v1.x

//The URL to use to clone spdlog.
LBANN_SB_spdlog_URL:STRING=https://github.com/gabime/spdlog

//The build RPATHs to add to zstr.
LBANN_SB_zstr_BUILD_RPATH:STRING=

//Use ORIGIN in build RPATH for zstr
LBANN_SB_zstr_BUILD_RPATH_USE_ORIGIN:BOOL=OFF

//Build shared libraries for zstr?
LBANN_SB_zstr_BUILD_SHARED_LIBS:BOOL=OFF

//The CMake build type for this build.
LBANN_SB_zstr_BUILD_TYPE:STRING=Release

//Use install rpath as build rpath for zstr
LBANN_SB_zstr_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

//Use the SSH protocol to clone zstr?
LBANN_SB_zstr_CLONE_VIA_SSH:BOOL=OFF

//The CMake generator to use for zstr.
LBANN_SB_zstr_CMAKE_GENERATOR:STRING=Ninja

//The exe linker flags for zstr.
LBANN_SB_zstr_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold

//The exe linker flags for zstr in RELEASE mode.
LBANN_SB_zstr_EXE_LINKER_FLAGS_RELEASE:STRING=

//The HTTPS URL CMake installation prefix for zstr.
LBANN_SB_zstr_HTTPS_URL:STRING=https://github.com/mateidavid/zstr

//Remove toolchain-specific paths from install RPATH for zstr
LBANN_SB_zstr_INSTALL_REMOVE_ENVIRONMENT_RPATH:BOOL=OFF

//The install RPATHs to add to zstr.
LBANN_SB_zstr_INSTALL_RPATH:STRING=

//Add linker paths to install RPATH for zstr
LBANN_SB_zstr_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF

//Use interprocedural optimization for zstr?
LBANN_SB_zstr_IPO:BOOL=OFF

//Force PIC for zstr?
LBANN_SB_zstr_PIC:BOOL=ON

//The CMake installation prefix for this build.
LBANN_SB_zstr_PREFIX:PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/zstr

//The shared linker flags for zstr.
LBANN_SB_zstr_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold

//The shared linker flags for zstr in RELEASE mode.
LBANN_SB_zstr_SHARED_LINKER_FLAGS_RELEASE:STRING=

//If true, skip adding build rpath info to zstr
LBANN_SB_zstr_SKIP_BUILD_RPATH:BOOL=OFF

//If true, skip adding install rpath info to zstr
LBANN_SB_zstr_SKIP_INSTALL_RPATH:BOOL=OFF

//If true, skip adding rpath info to zstr
LBANN_SB_zstr_SKIP_RPATH:BOOL=OFF

//The source directory for zstr.
LBANN_SB_zstr_SOURCE_DIR:PATH=/usr/workspace/haridev/iopp/software/lbann-install/zstr/src

//The SSH URL CMake installation prefix for zstr.
LBANN_SB_zstr_SSH_URL:STRING=git@github.com:mateidavid/zstr

//The static linker flags for zstr.
LBANN_SB_zstr_STATIC_LINKER_FLAGS:STRING=

//The static linker flags for zstr in RELEASE mode.
LBANN_SB_zstr_STATIC_LINKER_FLAGS_RELEASE:STRING=

//The git tag to checkout for zstr.
LBANN_SB_zstr_TAG:STRING=master

//The URL to use to clone zstr.
LBANN_SB_zstr_URL:STRING=https://github.com/mateidavid/zstr

//Value Computed by CMake
LBANN_SuperBuild_BINARY_DIR:STATIC=/usr/workspace/haridev/iopp/software/lbann-install

//Value Computed by CMake
LBANN_SuperBuild_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
LBANN_SuperBuild_SOURCE_DIR:STATIC=/usr/workspace/haridev/iopp/software/lbann/scripts/superbuild

//Path to a program.
__FIND_EXE:FILEPATH=/usr/bin/find


########################
# INTERNAL cache entries
########################

//The install prefix of Aluminum.
Aluminum_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/aluminum
//The install prefix of Catch2.
CATCH2_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/catch2
//ADVANCED property for variable: CMAKE_ASM_NASM_COMPILER
CMAKE_ASM_NASM_COMPILER-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=23
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/tce/packages/cmake/cmake-3.23.1/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/tce/packages/cmake/cmake-3.23.1/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/tce/packages/cmake/cmake-3.23.1/bin/ctest
//ADVANCED property for variable: CMAKE_CUDA_COMPILER
CMAKE_CUDA_COMPILER-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/usr/tce/packages/cmake/cmake-3.23.1/bin/ccmake
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//ADVANCED property for variable: CMAKE_HIP_COMPILER
CMAKE_HIP_COMPILER-ADVANCED:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/usr/workspace/haridev/iopp/software/lbann/scripts/superbuild
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=0
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=17
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/tce/packages/cmake/cmake-3.23.1/share/cmake
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//The install prefix of CNPY.
CNPY_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/cnpy
//The install prefix of Clara.
Clara_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/clara
//The install prefix of Conduit.
Conduit_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/conduit
//The install prefix of DiHydrogen.
DiHydrogen_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/dihydrogen
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//The install prefix of HDF5.
HDF5_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/hdf5
//The install prefix of Hydrogen.
Hydrogen_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/hydrogen
//The install prefix of JPEG-TURBO.
JPEG-TURBO_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/jpeg-turbo
//The install prefix of LBANN.
LBANN_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install
//ADVANCED property for variable: LBANN_SB_Aluminum_BUILD_SHARED_LIBS
LBANN_SB_Aluminum_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_BUILD_TYPE
LBANN_SB_Aluminum_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_CLONE_VIA_SSH
LBANN_SB_Aluminum_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_CMAKE_GENERATOR
LBANN_SB_Aluminum_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_CUDA_COMPILER
LBANN_SB_Aluminum_CUDA_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_CUDA_FLAGS
LBANN_SB_Aluminum_CUDA_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_CUDA_FLAGS_RELEASE
LBANN_SB_Aluminum_CUDA_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_CUDA_HOST_COMPILER
LBANN_SB_Aluminum_CUDA_HOST_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_CUDA_STANDARD
LBANN_SB_Aluminum_CUDA_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_CXX_COMPILER
LBANN_SB_Aluminum_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_CXX_FLAGS
LBANN_SB_Aluminum_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_CXX_FLAGS_RELEASE
LBANN_SB_Aluminum_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_CXX_STANDARD
LBANN_SB_Aluminum_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_HIP_COMPILER
LBANN_SB_Aluminum_HIP_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_HIP_FLAGS
LBANN_SB_Aluminum_HIP_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_HIP_FLAGS_RELEASE
LBANN_SB_Aluminum_HIP_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_HIP_STANDARD
LBANN_SB_Aluminum_HIP_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_HTTPS_URL
LBANN_SB_Aluminum_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_IPO
LBANN_SB_Aluminum_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_PIC
LBANN_SB_Aluminum_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_SOURCE_DIR
LBANN_SB_Aluminum_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Aluminum_SSH_URL
LBANN_SB_Aluminum_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_BUILD_SHARED_LIBS
LBANN_SB_CNPY_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_BUILD_TYPE
LBANN_SB_CNPY_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_CLONE_VIA_SSH
LBANN_SB_CNPY_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_CMAKE_GENERATOR
LBANN_SB_CNPY_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_CXX_COMPILER
LBANN_SB_CNPY_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_CXX_FLAGS
LBANN_SB_CNPY_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_CXX_FLAGS_RELEASE
LBANN_SB_CNPY_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_CXX_STANDARD
LBANN_SB_CNPY_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_C_COMPILER
LBANN_SB_CNPY_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_C_FLAGS
LBANN_SB_CNPY_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_C_FLAGS_RELEASE
LBANN_SB_CNPY_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_C_STANDARD
LBANN_SB_CNPY_C_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_HTTPS_URL
LBANN_SB_CNPY_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_IPO
LBANN_SB_CNPY_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_PIC
LBANN_SB_CNPY_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_SOURCE_DIR
LBANN_SB_CNPY_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_CNPY_SSH_URL
LBANN_SB_CNPY_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_BUILD_SHARED_LIBS
LBANN_SB_Catch2_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_BUILD_TYPE
LBANN_SB_Catch2_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_CLONE_VIA_SSH
LBANN_SB_Catch2_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_CMAKE_GENERATOR
LBANN_SB_Catch2_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_CXX_COMPILER
LBANN_SB_Catch2_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_CXX_FLAGS
LBANN_SB_Catch2_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_CXX_FLAGS_RELEASE
LBANN_SB_Catch2_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_CXX_STANDARD
LBANN_SB_Catch2_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_HTTPS_URL
LBANN_SB_Catch2_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_IPO
LBANN_SB_Catch2_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_PIC
LBANN_SB_Catch2_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_SOURCE_DIR
LBANN_SB_Catch2_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Catch2_SSH_URL
LBANN_SB_Catch2_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_BUILD_SHARED_LIBS
LBANN_SB_Clara_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_BUILD_TYPE
LBANN_SB_Clara_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_CLONE_VIA_SSH
LBANN_SB_Clara_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_CMAKE_GENERATOR
LBANN_SB_Clara_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_CXX_COMPILER
LBANN_SB_Clara_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_CXX_FLAGS
LBANN_SB_Clara_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_CXX_FLAGS_RELEASE
LBANN_SB_Clara_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_CXX_STANDARD
LBANN_SB_Clara_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_HTTPS_URL
LBANN_SB_Clara_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_IPO
LBANN_SB_Clara_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_PIC
LBANN_SB_Clara_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_SOURCE_DIR
LBANN_SB_Clara_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Clara_SSH_URL
LBANN_SB_Clara_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_BUILD_SHARED_LIBS
LBANN_SB_Conduit_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_BUILD_TYPE
LBANN_SB_Conduit_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_CLONE_VIA_SSH
LBANN_SB_Conduit_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_CMAKE_GENERATOR
LBANN_SB_Conduit_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_CXX_COMPILER
LBANN_SB_Conduit_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_CXX_FLAGS
LBANN_SB_Conduit_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_CXX_FLAGS_RELEASE
LBANN_SB_Conduit_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_CXX_STANDARD
LBANN_SB_Conduit_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_C_COMPILER
LBANN_SB_Conduit_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_C_FLAGS
LBANN_SB_Conduit_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_C_FLAGS_RELEASE
LBANN_SB_Conduit_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_C_STANDARD
LBANN_SB_Conduit_C_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_HTTPS_URL
LBANN_SB_Conduit_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_IPO
LBANN_SB_Conduit_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_PIC
LBANN_SB_Conduit_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_SOURCE_DIR
LBANN_SB_Conduit_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Conduit_SSH_URL
LBANN_SB_Conduit_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_BUILD_SHARED_LIBS
LBANN_SB_DiHydrogen_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_BUILD_TYPE
LBANN_SB_DiHydrogen_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_CLONE_VIA_SSH
LBANN_SB_DiHydrogen_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_CMAKE_GENERATOR
LBANN_SB_DiHydrogen_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_CUDA_COMPILER
LBANN_SB_DiHydrogen_CUDA_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_CUDA_FLAGS
LBANN_SB_DiHydrogen_CUDA_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_CUDA_FLAGS_RELEASE
LBANN_SB_DiHydrogen_CUDA_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_CUDA_HOST_COMPILER
LBANN_SB_DiHydrogen_CUDA_HOST_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_CUDA_STANDARD
LBANN_SB_DiHydrogen_CUDA_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_CXX_COMPILER
LBANN_SB_DiHydrogen_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_CXX_FLAGS
LBANN_SB_DiHydrogen_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_CXX_FLAGS_RELEASE
LBANN_SB_DiHydrogen_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_CXX_STANDARD
LBANN_SB_DiHydrogen_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_HIP_COMPILER
LBANN_SB_DiHydrogen_HIP_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_HIP_FLAGS
LBANN_SB_DiHydrogen_HIP_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_HIP_FLAGS_RELEASE
LBANN_SB_DiHydrogen_HIP_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_HIP_STANDARD
LBANN_SB_DiHydrogen_HIP_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_HTTPS_URL
LBANN_SB_DiHydrogen_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_IPO
LBANN_SB_DiHydrogen_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_PIC
LBANN_SB_DiHydrogen_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_SOURCE_DIR
LBANN_SB_DiHydrogen_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_DiHydrogen_SSH_URL
LBANN_SB_DiHydrogen_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_BUILD_SHARED_LIBS
LBANN_SB_HDF5_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_BUILD_TYPE
LBANN_SB_HDF5_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_CLONE_VIA_SSH
LBANN_SB_HDF5_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_CMAKE_GENERATOR
LBANN_SB_HDF5_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_CXX_COMPILER
LBANN_SB_HDF5_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_CXX_FLAGS
LBANN_SB_HDF5_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_CXX_FLAGS_RELEASE
LBANN_SB_HDF5_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_CXX_STANDARD
LBANN_SB_HDF5_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_C_COMPILER
LBANN_SB_HDF5_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_C_FLAGS
LBANN_SB_HDF5_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_C_FLAGS_RELEASE
LBANN_SB_HDF5_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_C_STANDARD
LBANN_SB_HDF5_C_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_HTTPS_URL
LBANN_SB_HDF5_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_IPO
LBANN_SB_HDF5_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_PIC
LBANN_SB_HDF5_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_SOURCE_DIR
LBANN_SB_HDF5_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_HDF5_SSH_URL
LBANN_SB_HDF5_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_BUILD_SHARED_LIBS
LBANN_SB_Hydrogen_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_BUILD_TYPE
LBANN_SB_Hydrogen_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_CLONE_VIA_SSH
LBANN_SB_Hydrogen_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_CMAKE_GENERATOR
LBANN_SB_Hydrogen_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_CUDA_COMPILER
LBANN_SB_Hydrogen_CUDA_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_CUDA_FLAGS
LBANN_SB_Hydrogen_CUDA_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_CUDA_FLAGS_RELEASE
LBANN_SB_Hydrogen_CUDA_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_CUDA_HOST_COMPILER
LBANN_SB_Hydrogen_CUDA_HOST_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_CUDA_STANDARD
LBANN_SB_Hydrogen_CUDA_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_CXX_COMPILER
LBANN_SB_Hydrogen_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_CXX_FLAGS
LBANN_SB_Hydrogen_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_CXX_FLAGS_RELEASE
LBANN_SB_Hydrogen_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_CXX_STANDARD
LBANN_SB_Hydrogen_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_HIP_COMPILER
LBANN_SB_Hydrogen_HIP_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_HIP_FLAGS
LBANN_SB_Hydrogen_HIP_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_HIP_FLAGS_RELEASE
LBANN_SB_Hydrogen_HIP_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_HIP_STANDARD
LBANN_SB_Hydrogen_HIP_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_HTTPS_URL
LBANN_SB_Hydrogen_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_IPO
LBANN_SB_Hydrogen_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_PIC
LBANN_SB_Hydrogen_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_SOURCE_DIR
LBANN_SB_Hydrogen_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_Hydrogen_SSH_URL
LBANN_SB_Hydrogen_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_ASM_NASM_COMPILER
LBANN_SB_JPEG-TURBO_ASM_NASM_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_ASM_NASM_FLAGS
LBANN_SB_JPEG-TURBO_ASM_NASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_ASM_NASM_FLAGS_RELEASE
LBANN_SB_JPEG-TURBO_ASM_NASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_ASM_NASM_STANDARD
LBANN_SB_JPEG-TURBO_ASM_NASM_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_BUILD_SHARED_LIBS
LBANN_SB_JPEG-TURBO_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_BUILD_TYPE
LBANN_SB_JPEG-TURBO_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_CLONE_VIA_SSH
LBANN_SB_JPEG-TURBO_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_CMAKE_GENERATOR
LBANN_SB_JPEG-TURBO_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_CXX_COMPILER
LBANN_SB_JPEG-TURBO_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_CXX_FLAGS
LBANN_SB_JPEG-TURBO_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_CXX_FLAGS_RELEASE
LBANN_SB_JPEG-TURBO_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_CXX_STANDARD
LBANN_SB_JPEG-TURBO_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_C_COMPILER
LBANN_SB_JPEG-TURBO_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_C_FLAGS
LBANN_SB_JPEG-TURBO_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_C_FLAGS_RELEASE
LBANN_SB_JPEG-TURBO_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_C_STANDARD
LBANN_SB_JPEG-TURBO_C_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_HTTPS_URL
LBANN_SB_JPEG-TURBO_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_IPO
LBANN_SB_JPEG-TURBO_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_PIC
LBANN_SB_JPEG-TURBO_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_SOURCE_DIR
LBANN_SB_JPEG-TURBO_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_JPEG-TURBO_SSH_URL
LBANN_SB_JPEG-TURBO_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_BUILD_SHARED_LIBS
LBANN_SB_LBANN_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_BUILD_TYPE
LBANN_SB_LBANN_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_CLONE_VIA_SSH
LBANN_SB_LBANN_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_CMAKE_GENERATOR
LBANN_SB_LBANN_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_CUDA_COMPILER
LBANN_SB_LBANN_CUDA_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_CUDA_FLAGS
LBANN_SB_LBANN_CUDA_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_CUDA_FLAGS_RELEASE
LBANN_SB_LBANN_CUDA_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_CUDA_HOST_COMPILER
LBANN_SB_LBANN_CUDA_HOST_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_CUDA_STANDARD
LBANN_SB_LBANN_CUDA_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_CXX_COMPILER
LBANN_SB_LBANN_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_CXX_FLAGS
LBANN_SB_LBANN_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_CXX_FLAGS_RELEASE
LBANN_SB_LBANN_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_CXX_STANDARD
LBANN_SB_LBANN_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_C_COMPILER
LBANN_SB_LBANN_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_C_FLAGS
LBANN_SB_LBANN_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_C_FLAGS_RELEASE
LBANN_SB_LBANN_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_C_STANDARD
LBANN_SB_LBANN_C_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_HIP_COMPILER
LBANN_SB_LBANN_HIP_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_HIP_FLAGS
LBANN_SB_LBANN_HIP_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_HIP_FLAGS_RELEASE
LBANN_SB_LBANN_HIP_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_HIP_STANDARD
LBANN_SB_LBANN_HIP_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_HTTPS_URL
LBANN_SB_LBANN_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_IPO
LBANN_SB_LBANN_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_PIC
LBANN_SB_LBANN_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_SOURCE_DIR
LBANN_SB_LBANN_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_LBANN_SSH_URL
LBANN_SB_LBANN_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_BUILD_SHARED_LIBS
LBANN_SB_NCCL_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_BUILD_TYPE
LBANN_SB_NCCL_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_CLONE_VIA_SSH
LBANN_SB_NCCL_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_CMAKE_GENERATOR
LBANN_SB_NCCL_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_CUDA_COMPILER
LBANN_SB_NCCL_CUDA_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_CUDA_FLAGS
LBANN_SB_NCCL_CUDA_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_CUDA_FLAGS_RELEASE
LBANN_SB_NCCL_CUDA_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_CUDA_HOST_COMPILER
LBANN_SB_NCCL_CUDA_HOST_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_CUDA_STANDARD
LBANN_SB_NCCL_CUDA_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_CXX_COMPILER
LBANN_SB_NCCL_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_CXX_FLAGS
LBANN_SB_NCCL_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_CXX_FLAGS_RELEASE
LBANN_SB_NCCL_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_CXX_STANDARD
LBANN_SB_NCCL_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_C_COMPILER
LBANN_SB_NCCL_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_C_FLAGS
LBANN_SB_NCCL_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_C_FLAGS_RELEASE
LBANN_SB_NCCL_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_C_STANDARD
LBANN_SB_NCCL_C_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_HTTPS_URL
LBANN_SB_NCCL_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_IPO
LBANN_SB_NCCL_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_PIC
LBANN_SB_NCCL_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_SOURCE_DIR
LBANN_SB_NCCL_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_NCCL_SSH_URL
LBANN_SB_NCCL_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_BUILD_SHARED_LIBS
LBANN_SB_OpenCV_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_BUILD_TYPE
LBANN_SB_OpenCV_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_CLONE_VIA_SSH
LBANN_SB_OpenCV_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_CMAKE_GENERATOR
LBANN_SB_OpenCV_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_CXX_COMPILER
LBANN_SB_OpenCV_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_CXX_FLAGS
LBANN_SB_OpenCV_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_CXX_FLAGS_RELEASE
LBANN_SB_OpenCV_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_CXX_STANDARD
LBANN_SB_OpenCV_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_C_COMPILER
LBANN_SB_OpenCV_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_C_FLAGS
LBANN_SB_OpenCV_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_C_FLAGS_RELEASE
LBANN_SB_OpenCV_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_C_STANDARD
LBANN_SB_OpenCV_C_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_Fortran_COMPILER
LBANN_SB_OpenCV_Fortran_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_Fortran_FLAGS
LBANN_SB_OpenCV_Fortran_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_Fortran_FLAGS_RELEASE
LBANN_SB_OpenCV_Fortran_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_Fortran_STANDARD
LBANN_SB_OpenCV_Fortran_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_HTTPS_URL
LBANN_SB_OpenCV_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_IPO
LBANN_SB_OpenCV_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_PIC
LBANN_SB_OpenCV_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_SOURCE_DIR
LBANN_SB_OpenCV_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_OpenCV_SSH_URL
LBANN_SB_OpenCV_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_BUILD_SHARED_LIBS
LBANN_SB_cereal_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_BUILD_TYPE
LBANN_SB_cereal_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_CLONE_VIA_SSH
LBANN_SB_cereal_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_CMAKE_GENERATOR
LBANN_SB_cereal_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_CXX_COMPILER
LBANN_SB_cereal_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_CXX_FLAGS
LBANN_SB_cereal_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_CXX_FLAGS_RELEASE
LBANN_SB_cereal_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_CXX_STANDARD
LBANN_SB_cereal_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_C_COMPILER
LBANN_SB_cereal_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_C_FLAGS
LBANN_SB_cereal_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_C_FLAGS_RELEASE
LBANN_SB_cereal_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_C_STANDARD
LBANN_SB_cereal_C_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_HTTPS_URL
LBANN_SB_cereal_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_IPO
LBANN_SB_cereal_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_PIC
LBANN_SB_cereal_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_SOURCE_DIR
LBANN_SB_cereal_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_cereal_SSH_URL
LBANN_SB_cereal_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_BUILD_SHARED_LIBS
LBANN_SB_protobuf_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_BUILD_TYPE
LBANN_SB_protobuf_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_CLONE_VIA_SSH
LBANN_SB_protobuf_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_CMAKE_GENERATOR
LBANN_SB_protobuf_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_CXX_COMPILER
LBANN_SB_protobuf_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_CXX_FLAGS
LBANN_SB_protobuf_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_CXX_FLAGS_RELEASE
LBANN_SB_protobuf_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_CXX_STANDARD
LBANN_SB_protobuf_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_C_COMPILER
LBANN_SB_protobuf_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_C_FLAGS
LBANN_SB_protobuf_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_C_FLAGS_RELEASE
LBANN_SB_protobuf_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_C_STANDARD
LBANN_SB_protobuf_C_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_HTTPS_URL
LBANN_SB_protobuf_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_IPO
LBANN_SB_protobuf_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_PIC
LBANN_SB_protobuf_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_SOURCE_DIR
LBANN_SB_protobuf_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_protobuf_SSH_URL
LBANN_SB_protobuf_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_BUILD_SHARED_LIBS
LBANN_SB_spdlog_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_BUILD_TYPE
LBANN_SB_spdlog_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_CLONE_VIA_SSH
LBANN_SB_spdlog_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_CMAKE_GENERATOR
LBANN_SB_spdlog_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_CXX_COMPILER
LBANN_SB_spdlog_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_CXX_FLAGS
LBANN_SB_spdlog_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_CXX_FLAGS_RELEASE
LBANN_SB_spdlog_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_CXX_STANDARD
LBANN_SB_spdlog_CXX_STANDARD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_HTTPS_URL
LBANN_SB_spdlog_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_IPO
LBANN_SB_spdlog_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_PIC
LBANN_SB_spdlog_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_SOURCE_DIR
LBANN_SB_spdlog_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_spdlog_SSH_URL
LBANN_SB_spdlog_SSH_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_zstr_BUILD_SHARED_LIBS
LBANN_SB_zstr_BUILD_SHARED_LIBS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_zstr_BUILD_TYPE
LBANN_SB_zstr_BUILD_TYPE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_zstr_CLONE_VIA_SSH
LBANN_SB_zstr_CLONE_VIA_SSH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_zstr_CMAKE_GENERATOR
LBANN_SB_zstr_CMAKE_GENERATOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_zstr_HTTPS_URL
LBANN_SB_zstr_HTTPS_URL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_zstr_IPO
LBANN_SB_zstr_IPO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_zstr_PIC
LBANN_SB_zstr_PIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_zstr_SOURCE_DIR
LBANN_SB_zstr_SOURCE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LBANN_SB_zstr_SSH_URL
LBANN_SB_zstr_SSH_URL-ADVANCED:INTERNAL=1
//The install prefix of NCCL.
NCCL_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/nccl
//The install prefix of OpenCV.
OpenCV_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/opencv
//ADVANCED property for variable: __FIND_EXE
__FIND_EXE-ADVANCED:INTERNAL=1
//The install prefix of cereal.
cereal_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/cereal
//The install prefix of Protobuf.
protobuf_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/protobuf
//The install prefix of spdlog.
spdlog_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/spdlog
//The install prefix of zstr.
zstr_DIR:INTERNAL=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/zstr



cmake_minimum_required(VERSION 3.15)

set(command "/usr/tce/packages/cmake/cmake-3.23.1/bin/cmake;-DCMAKE_C_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/gcc;-DCMAKE_C_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64;-DCMAKE_CXX_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/g++;-DCMAKE_CXX_STANDARD:STRING=17;-DCMAKE_CXX_FLAGS:STRING=-g -finstrument-functions -Wl,-E -fvisibility=default -L/usr/tce/packages/cuda/cuda-11.8.0/lib64;-DCMAKE_Fortran_COMPILER:STRING=/usr/tce/packages/gcc/gcc-11.2.1/bin/gfortran;-DCMAKE_SHARED_LINKER_FLAGS:STRING=-fuse-ld=gold;-DCMAKE_EXE_LINKER_FLAGS:STRING=-fuse-ld=gold;-D;BUILD_SHARED_LIBS=OFF;-D;CMAKE_INSTALL_PREFIX=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/opencv;-D;CMAKE_BUILD_TYPE=Release;-D;CMAKE_POSITION_INDEPENDENT_CODE=ON;-D;CMAKE_INTERPROCEDURAL_OPTIMIZATION=OFF;-D;CMAKE_INSTALL_RPATH_USE_LINK_PATH=OFF;-D;CMAKE_SKIP_RPATH=OFF;-D;CMAKE_BUILD_RPATH_USE_ORIGIN=OFF;-D;CMAKE_BUILD_WITH_INSTALL_RPATH=OFF;-D;CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH=OFF;-D;CMAKE_SKIP_BUILD_RPATH=OFF;-D;CMAKE_SKIP_INSTALL_RPATH=OFF;-DANDROID_EXAMPLES_WITH_LIBS=OFF;-DBUILD_ANDROID_EXAMPLES=OFF;-DBUILD_ANDROID_PACKAGE=OFF;-DBUILD_ANDROID_SERVICE=OFF;-DBUILD_CUDA_STUBS=OFF;-DBUILD_DOCS=OFF;-DBUILD_EXAMPLES=OFF;-DBUILD_FAT_JAVA_LIB=OFF;-DBUILD_IPP_IW=OFF;-DBUILD_ITT=ON;-DBUILD_JASPER=OFF;-DBUILD_JPEG=OFF;-DBUILD_OPENEXR=OFF;-DBUILD_PACKAGE=OFF;-DBUILD_PERF_TESTS=OFF;-DBUILD_PNG=ON;-DBUILD_SHARED_LIBS=ON;-DBUILD_TBB=OFF;-DBUILD_TESTS=OFF;-DBUILD_TIFF=ON;-DBUILD_TINY_GPU_MODULE=OFF;-DBUILD_WITH_DEBUG_INFO=OFF;-DBUILD_WITH_DYNAMIC_IPP=OFF;-DBUILD_WITH_STATIC_CRT=OFF;-DBUILD_ZLIB=ON;-DBUILD_opencv_apps=OFF;-DBUILD_opencv_calib3d=OFF;-DBUILD_opencv_contrib=OFF;-DBUILD_opencv_core=ON;-DBUILD_opencv_dnn=OFF;-DBUILD_opencv_features2d=OFF;-DBUILD_opencv_flann=OFF;-DBUILD_opencv_gpu=OFF;-DBUILD_opencv_highgui=OFF;-DBUILD_opencv_imgproc=ON;-DBUILD_opencv_java=OFF;-DBUILD_opencv_legacy=OFF;-DBUILD_opencv_ml=OFF;-DBUILD_opencv_nonfree=OFF;-DBUILD_opencv_objdetect=OFF;-DBUILD_opencv_photo=OFF;-DBUILD_opencv_python=OFF;-DBUILD_opencv_python2=OFF;-DBUILD_opencv_python3=OFF;-DBUILD_opencv_stitching=OFF;-DBUILD_opencv_superres=OFF;-DBUILD_opencv_ts=OFF;-DBUILD_opencv_video=OFF;-DBUILD_opencv_videoio=OFF;-DBUILD_opencv_videostab=OFF;-DBUILD_opencv_world=OFF;-DCMAKE_PREFIX_PATH=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/jpeg-turbo\;/usr/workspace/haridev/iopp/software/lbann-install/install_deps/jpeg-turbo;-DCV_DISABLE_OPTIMIZATION=OFF;-DCV_ENABLE_INTRINSICS=ON;-DCV_TRACE=OFF;-DDYNAMIC_CUDA=OFF;-DENABLE_BUILD_HARDENING=OFF;-DENABLE_CCACHE=OFF;-DENABLE_COVERAGE=OFF;-DENABLE_FAST_MATH=ON;-DENABLE_GNU_STL_DEBUG=OFF;-DENABLE_IMPL_COLLECTION=OFF;-DENABLE_INSTRUMENTATION=OFF;-DENABLE_LIBVS2013=OFF;-DENABLE_NEON=OFF;-DENABLE_NOISY_WARNINGS=OFF;-DENABLE_NONFREE=OFF;-DENABLE_OMIT_FRAME_POINTER=ON;-DENABLE_POWERPC=ON;-DENABLE_PRECOMPILED_HEADERS=OFF;-DENABLE_PROFILING=ON;-DENABLE_SOLUTION_FOLDERS=OFF;-DENABLE_VFPV3=OFF;-DENABLE_WINPHONESDK80=OFF;-DENABLE_WINPHONESDK81=OFF;-DENABLE_WINRT_MODE=OFF;-DENABLE_WINRT_MODE_NATIVE=OFF;-DENABLE_WINSDK81=OFF;-DGENERATE_ABI_DESCRIPTOR=OFF;-DINSTALL_ANDROID_EXAMPLES=OFF;-DINSTALL_CREATE_DISTRIB=OFF;-DINSTALL_C_EXAMPLES=OFF;-DINSTALL_PYTHON_EXAMPLES=OFF;-DINSTALL_TESTS=OFF;-DINSTALL_TO_MANGLED_PATHS=OFF;-DJPEG-TURBO_ROOT=/usr/workspace/haridev/iopp/software/lbann-install/install_deps/jpeg-turbo;-DWARNINGS_ARE_ERRORS=OFF;-DWITH_1394=OFF;-DWITH_ARAVIS=OFF;-DWITH_AVFOUNDATION=OFF;-DWITH_CARBON=OFF;-DWITH_CAROTENE=OFF;-DWITH_CLP=OFF;-DWITH_CPUFEATURES=OFF;-DWITH_CSTRIPES=OFF;-DWITH_CUBLAS=OFF;-DWITH_CUDA=OFF;-DWITH_CUFFT=OFF;-DWITH_DIRECTX=OFF;-DWITH_DSHOW=OFF;-DWITH_EIGEN=OFF;-DWITH_FFMPEG=OFF;-DWITH_GDAL=OFF;-DWITH_GDCM=OFF;-DWITH_GIGEAPI=OFF;-DWITH_GPHOTO2=OFF;-DWITH_GSTREAMER=OFF;-DWITH_GSTREAMER_0_10=OFF;-DWITH_GTK=OFF;-DWITH_GTK_2_X=OFF;-DWITH_HALIDE=OFF;-DWITH_IMAGEIO=OFF;-DWITH_INTELPERC=OFF;-DWITH_IPP=ON;-DWITH_IPP_A=OFF;-DWITH_ITT=ON;-DWITH_JASPER=OFF;-DWITH_JPEG=ON;-DWITH_LAPACK=OFF;-DWITH_LIBJPEG_TURBO=ON;-DWITH_LIBV4L=OFF;-DWITH_MATLAB=OFF;-DWITH_MFX=OFF;-DWITH_MSMF=OFF;-DWITH_NVCUVID=OFF;-DWITH_OPENCL=OFF;-DWITH_OPENCLAMDBLAS=OFF;-DWITH_OPENCLAMDFFT=OFF;-DWITH_OPENCL_SVM=OFF;-DWITH_OPENEXR=OFF;-DWITH_OPENGL=OFF;-DWITH_OPENMP=OFF;-DWITH_OPENNI=OFF;-DWITH_OPENNI2=OFF;-DWITH_OPENVX=OFF;-DWITH_PNG=ON;-DWITH_PTHREADS_PF=OFF;-DWITH_PVAPI=OFF;-DWITH_QT=OFF;-DWITH_QTKIT=OFF;-DWITH_QUICKTIME=OFF;-DWITH_TBB=OFF;-DWITH_TIFF=ON;-DWITH_UNICAP=OFF;-DWITH_V4L=OFF;-DWITH_VA=OFF;-DWITH_VA_INTEL=OFF;-DWITH_VFW=OFF;-DWITH_VTK=OFF;-DWITH_WEBP=OFF;-DWITH_WIN32UI=OFF;-DWITH_XIMEA=OFF;-DWITH_XINE=OFF;-GNinja;/usr/workspace/haridev/iopp/software/lbann-install/opencv/src")
set(log_merged "")
set(log_output_on_failure "")
set(stdout_log "/usr/workspace/haridev/iopp/software/lbann-install/opencv/stamp/OpenCV-configure-out.log")
set(stderr_log "/usr/workspace/haridev/iopp/software/lbann-install/opencv/stamp/OpenCV-configure-err.log")
execute_process(
  COMMAND ${command}
  RESULT_VARIABLE result
  OUTPUT_FILE "${stdout_log}"
  ERROR_FILE "${stderr_log}"
  )
macro(read_up_to_max_size log_file output_var)
  file(SIZE ${log_file} determined_size)
  set(max_size 10240)
  if (determined_size GREATER max_size)
    math(EXPR seek_position "${determined_size} - ${max_size}")
    file(READ ${log_file} ${output_var} OFFSET ${seek_position})
    set(${output_var} "...skipping to end...\n${${output_var}}")
  else()
    file(READ ${log_file} ${output_var})
  endif()
endmacro()
if(result)
  set(msg "Command failed: ${result}\n")
  foreach(arg IN LISTS command)
    set(msg "${msg} '${arg}'")
  endforeach()
  if (${log_merged})
    set(msg "${msg}\nSee also\n  ${stderr_log}")
  else()
    set(msg "${msg}\nSee also\n  /usr/workspace/haridev/iopp/software/lbann-install/opencv/stamp/OpenCV-configure-*.log")
  endif()
  if (${log_output_on_failure})
    message(SEND_ERROR "${msg}")
    if (${log_merged})
      read_up_to_max_size("${stderr_log}" error_log_contents)
      message(STATUS "Log output is:\n${error_log_contents}")
    else()
      read_up_to_max_size("${stdout_log}" out_log_contents)
      read_up_to_max_size("${stderr_log}" err_log_contents)
      message(STATUS "stdout output is:\n${out_log_contents}")
      message(STATUS "stderr output is:\n${err_log_contents}")
    endif()
    message(FATAL_ERROR "Stopping after outputting logs.")
  else()
    message(FATAL_ERROR "${msg}")
  endif()
else()
  if(NOT "Ninja" MATCHES "Ninja")
    set(msg "OpenCV configure command succeeded.  See also /usr/workspace/haridev/iopp/software/lbann-install/opencv/stamp/OpenCV-configure-*.log")
    message(STATUS "${msg}")
  endif()
endif()
